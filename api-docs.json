{
  "openapi": "3.0.3",
  "info": {
    "title": "fastAdmin API",
    "description": "fastAdmin API documentation",
    "contact": {},
    "license": {
      "name": "unlicensed"
    },
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Inferred Url"
    }
  ],
  "tags": [
    {
      "name": "account-resource",
      "description": "Account Resource"
    },
    {
      "name": "application-role-resource",
      "description": "Application Role Resource"
    },
    {
      "name": "application-user-resource",
      "description": "Application User Resource"
    },
    {
      "name": "bank-account-resource",
      "description": "Bank Account Resource"
    },
    {
      "name": "catalog-category-resource",
      "description": "Catalog Category Resource"
    },
    {
      "name": "catalog-product-resource",
      "description": "Catalog Product Resource"
    },
    {
      "name": "catalog-service-resource",
      "description": "Catalog Service Resource"
    },
    {
      "name": "catalog-unit-resource",
      "description": "Catalog Unit Resource"
    },
    {
      "name": "contact-account-resource",
      "description": "Contact Account Resource"
    },
    {
      "name": "contact-address-resource",
      "description": "Contact Address Resource"
    },
    {
      "name": "contact-group-resource",
      "description": "Contact Group Resource"
    },
    {
      "name": "contact-person-resource",
      "description": "Contact Person Resource"
    },
    {
      "name": "contact-relation-resource",
      "description": "Contact Relation Resource"
    },
    {
      "name": "contact-reminder-resource",
      "description": "Contact Reminder Resource"
    },
    {
      "name": "contact-resource",
      "description": "Contact Resource"
    },
    {
      "name": "cost-unit-resource",
      "description": "Cost Unit Resource"
    },
    {
      "name": "custom-field-resource",
      "description": "Custom Field Resource"
    },
    {
      "name": "custom-field-value-resource",
      "description": "Custom Field Value Resource"
    },
    {
      "name": "delivery-note-resource",
      "description": "Delivery Note Resource"
    },
    {
      "name": "descriptive-document-text-resource",
      "description": "Descriptive Document Text Resource"
    },
    {
      "name": "document-free-text-resource",
      "description": "Document Free Text Resource"
    },
    {
      "name": "document-invoice-workflow-resource",
      "description": "Document Invoice Workflow Resource"
    },
    {
      "name": "document-letter-resource",
      "description": "Document Letter Resource"
    },
    {
      "name": "document-position-resource",
      "description": "Document Position Resource"
    },
    {
      "name": "document-text-resource",
      "description": "Document Text Resource"
    },
    {
      "name": "effort-resource",
      "description": "Effort Resource"
    },
    {
      "name": "exchange-rate-resource",
      "description": "Exchange Rate Resource"
    },
    {
      "name": "free-text-resource",
      "description": "Free Text Resource"
    },
    {
      "name": "invoice-resource",
      "description": "Invoice Resource"
    },
    {
      "name": "isr-resource",
      "description": "Isr Resource"
    },
    {
      "name": "layout-resource",
      "description": "Layout Resource"
    },
    {
      "name": "offer-resource",
      "description": "Offer Resource"
    },
    {
      "name": "order-confirmation-resource",
      "description": "Order Confirmation Resource"
    },
    {
      "name": "owner-resource",
      "description": "Owner Resource"
    },
    {
      "name": "permission-resource",
      "description": "Permission Resource"
    },
    {
      "name": "project-resource",
      "description": "Project Resource"
    },
    {
      "name": "public-user-resource",
      "description": "Public User Resource"
    },
    {
      "name": "reporting-activity-resource",
      "description": "Reporting Activity Resource"
    },
    {
      "name": "resource-permission-resource",
      "description": "Resource Permission Resource"
    },
    {
      "name": "signature-resource",
      "description": "Signature Resource"
    },
    {
      "name": "user-jwt-controller",
      "description": "User JWT Controller"
    },
    {
      "name": "user-resource",
      "description": "User Resource"
    },
    {
      "name": "value-added-tax-resource",
      "description": "Value Added Tax Resource"
    },
    {
      "name": "working-hour-resource",
      "description": "Working Hour Resource"
    }
  ],
  "paths": {
    "/api/account": {
      "get": {
        "tags": ["account-resource"],
        "summary": "getAccount",
        "operationId": "getAccountUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["account-resource"],
        "summary": "saveAccount",
        "operationId": "saveAccountUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUserDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/account/change-password": {
      "post": {
        "tags": ["account-resource"],
        "summary": "changePassword",
        "operationId": "changePasswordUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordChangeDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/account/reset-password/finish": {
      "post": {
        "tags": ["account-resource"],
        "summary": "finishPasswordReset",
        "operationId": "finishPasswordResetUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeyAndPasswordVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/account/reset-password/init": {
      "post": {
        "tags": ["account-resource"],
        "summary": "requestPasswordReset",
        "operationId": "requestPasswordResetUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/activate": {
      "get": {
        "tags": ["account-resource"],
        "summary": "activateAccount",
        "operationId": "activateAccountUsingGET",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "key",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/authenticate": {
      "get": {
        "tags": ["account-resource"],
        "summary": "isAuthenticated",
        "operationId": "isAuthenticatedUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["user-jwt-controller"],
        "summary": "authorize",
        "operationId": "authorizeUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/JWTToken"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/register": {
      "post": {
        "tags": ["account-resource"],
        "summary": "registerAccount",
        "operationId": "registerAccountUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagedUserVM"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/application-roles": {
      "get": {
        "tags": ["application-role-resource"],
        "summary": "getAllApplicationRoles",
        "operationId": "getAllApplicationRolesUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationRoleDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["application-role-resource"],
        "summary": "createApplicationRole",
        "operationId": "createApplicationRoleUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationRoleDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationRoleDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/application-roles/{id}": {
      "get": {
        "tags": ["application-role-resource"],
        "summary": "getApplicationRole",
        "operationId": "getApplicationRoleUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationRoleDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["application-role-resource"],
        "summary": "updateApplicationRole",
        "operationId": "updateApplicationRoleUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationRoleDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationRoleDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["application-role-resource"],
        "summary": "deleteApplicationRole",
        "operationId": "deleteApplicationRoleUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["application-role-resource"],
        "summary": "partialUpdateApplicationRole",
        "operationId": "partialUpdateApplicationRoleUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationRoleDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationRoleDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationRoleDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/application-users": {
      "get": {
        "tags": ["application-user-resource"],
        "summary": "getAllApplicationUsers",
        "operationId": "getAllApplicationUsersUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationUserDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["application-user-resource"],
        "summary": "createApplicationUser",
        "operationId": "createApplicationUserUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationUserDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationUserDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/application-users/{id}": {
      "get": {
        "tags": ["application-user-resource"],
        "summary": "getApplicationUser",
        "operationId": "getApplicationUserUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationUserDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["application-user-resource"],
        "summary": "updateApplicationUser",
        "operationId": "updateApplicationUserUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationUserDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationUserDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["application-user-resource"],
        "summary": "deleteApplicationUser",
        "operationId": "deleteApplicationUserUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["application-user-resource"],
        "summary": "partialUpdateApplicationUser",
        "operationId": "partialUpdateApplicationUserUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationUserDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationUserDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationUserDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/bank-accounts": {
      "get": {
        "tags": ["bank-account-resource"],
        "summary": "getAllBankAccounts",
        "operationId": "getAllBankAccountsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BankAccountDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["bank-account-resource"],
        "summary": "createBankAccount",
        "operationId": "createBankAccountUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bank-accounts/{id}": {
      "get": {
        "tags": ["bank-account-resource"],
        "summary": "getBankAccount",
        "operationId": "getBankAccountUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["bank-account-resource"],
        "summary": "updateBankAccount",
        "operationId": "updateBankAccountUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["bank-account-resource"],
        "summary": "deleteBankAccount",
        "operationId": "deleteBankAccountUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["bank-account-resource"],
        "summary": "partialUpdateBankAccount",
        "operationId": "partialUpdateBankAccountUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccountDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/catalog-categories": {
      "get": {
        "tags": ["catalog-category-resource"],
        "summary": "getAllCatalogCategories",
        "operationId": "getAllCatalogCategoriesUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogCategoryDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["catalog-category-resource"],
        "summary": "createCatalogCategory",
        "operationId": "createCatalogCategoryUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogCategoryDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/catalog-categories/{id}": {
      "get": {
        "tags": ["catalog-category-resource"],
        "summary": "getCatalogCategory",
        "operationId": "getCatalogCategoryUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogCategoryDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["catalog-category-resource"],
        "summary": "updateCatalogCategory",
        "operationId": "updateCatalogCategoryUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogCategoryDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["catalog-category-resource"],
        "summary": "deleteCatalogCategory",
        "operationId": "deleteCatalogCategoryUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["catalog-category-resource"],
        "summary": "partialUpdateCatalogCategory",
        "operationId": "partialUpdateCatalogCategoryUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogCategoryDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/catalog-products": {
      "get": {
        "tags": ["catalog-product-resource"],
        "summary": "getAllCatalogProducts",
        "operationId": "getAllCatalogProductsUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogProductDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["catalog-product-resource"],
        "summary": "createCatalogProduct",
        "operationId": "createCatalogProductUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogProductDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogProductDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/catalog-products/{id}": {
      "get": {
        "tags": ["catalog-product-resource"],
        "summary": "getCatalogProduct",
        "operationId": "getCatalogProductUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogProductDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["catalog-product-resource"],
        "summary": "updateCatalogProduct",
        "operationId": "updateCatalogProductUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogProductDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogProductDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["catalog-product-resource"],
        "summary": "deleteCatalogProduct",
        "operationId": "deleteCatalogProductUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["catalog-product-resource"],
        "summary": "partialUpdateCatalogProduct",
        "operationId": "partialUpdateCatalogProductUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogProductDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogProductDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogProductDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/catalog-services": {
      "get": {
        "tags": ["catalog-service-resource"],
        "summary": "getAllCatalogServices",
        "operationId": "getAllCatalogServicesUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogServiceDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["catalog-service-resource"],
        "summary": "createCatalogService",
        "operationId": "createCatalogServiceUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogServiceDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogServiceDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/catalog-services/{id}": {
      "get": {
        "tags": ["catalog-service-resource"],
        "summary": "getCatalogService",
        "operationId": "getCatalogServiceUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogServiceDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["catalog-service-resource"],
        "summary": "updateCatalogService",
        "operationId": "updateCatalogServiceUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogServiceDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogServiceDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["catalog-service-resource"],
        "summary": "deleteCatalogService",
        "operationId": "deleteCatalogServiceUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["catalog-service-resource"],
        "summary": "partialUpdateCatalogService",
        "operationId": "partialUpdateCatalogServiceUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogServiceDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogServiceDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogServiceDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/catalog-units": {
      "get": {
        "tags": ["catalog-unit-resource"],
        "summary": "getAllCatalogUnits",
        "operationId": "getAllCatalogUnitsUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogUnitDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["catalog-unit-resource"],
        "summary": "createCatalogUnit",
        "operationId": "createCatalogUnitUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogUnitDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogUnitDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/catalog-units/{id}": {
      "get": {
        "tags": ["catalog-unit-resource"],
        "summary": "getCatalogUnit",
        "operationId": "getCatalogUnitUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogUnitDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["catalog-unit-resource"],
        "summary": "updateCatalogUnit",
        "operationId": "updateCatalogUnitUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogUnitDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogUnitDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["catalog-unit-resource"],
        "summary": "deleteCatalogUnit",
        "operationId": "deleteCatalogUnitUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["catalog-unit-resource"],
        "summary": "partialUpdateCatalogUnit",
        "operationId": "partialUpdateCatalogUnitUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogUnitDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogUnitDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogUnitDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/contact-accounts": {
      "get": {
        "tags": ["contact-account-resource"],
        "summary": "getAllContactAccounts",
        "operationId": "getAllContactAccountsUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactAccountDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["contact-account-resource"],
        "summary": "createContactAccount",
        "operationId": "createContactAccountUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactAccountDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactAccountDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/contact-accounts/{id}": {
      "get": {
        "tags": ["contact-account-resource"],
        "summary": "getContactAccount",
        "operationId": "getContactAccountUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactAccountDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["contact-account-resource"],
        "summary": "updateContactAccount",
        "operationId": "updateContactAccountUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactAccountDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactAccountDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["contact-account-resource"],
        "summary": "deleteContactAccount",
        "operationId": "deleteContactAccountUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["contact-account-resource"],
        "summary": "partialUpdateContactAccount",
        "operationId": "partialUpdateContactAccountUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactAccountDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactAccountDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactAccountDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/contact-addresses": {
      "get": {
        "tags": ["contact-address-resource"],
        "summary": "getAllContactAddresses",
        "operationId": "getAllContactAddressesUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactAddressDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["contact-address-resource"],
        "summary": "createContactAddress",
        "operationId": "createContactAddressUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactAddressDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactAddressDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/contact-addresses/{id}": {
      "get": {
        "tags": ["contact-address-resource"],
        "summary": "getContactAddress",
        "operationId": "getContactAddressUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactAddressDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["contact-address-resource"],
        "summary": "updateContactAddress",
        "operationId": "updateContactAddressUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactAddressDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactAddressDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["contact-address-resource"],
        "summary": "deleteContactAddress",
        "operationId": "deleteContactAddressUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["contact-address-resource"],
        "summary": "partialUpdateContactAddress",
        "operationId": "partialUpdateContactAddressUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactAddressDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactAddressDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactAddressDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/contact-groups": {
      "get": {
        "tags": ["contact-group-resource"],
        "summary": "getAllContactGroups",
        "operationId": "getAllContactGroupsUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactGroupDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["contact-group-resource"],
        "summary": "createContactGroup",
        "operationId": "createContactGroupUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGroupDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroupDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/contact-groups/{id}": {
      "get": {
        "tags": ["contact-group-resource"],
        "summary": "getContactGroup",
        "operationId": "getContactGroupUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroupDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["contact-group-resource"],
        "summary": "updateContactGroup",
        "operationId": "updateContactGroupUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGroupDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroupDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["contact-group-resource"],
        "summary": "deleteContactGroup",
        "operationId": "deleteContactGroupUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["contact-group-resource"],
        "summary": "partialUpdateContactGroup",
        "operationId": "partialUpdateContactGroupUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGroupDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGroupDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroupDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/contact-people": {
      "get": {
        "tags": ["contact-person-resource"],
        "summary": "getAllContactPeople",
        "operationId": "getAllContactPeopleUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactPersonDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["contact-person-resource"],
        "summary": "createContactPerson",
        "operationId": "createContactPersonUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactPersonDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactPersonDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/contact-people/{id}": {
      "get": {
        "tags": ["contact-person-resource"],
        "summary": "getContactPerson",
        "operationId": "getContactPersonUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactPersonDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["contact-person-resource"],
        "summary": "updateContactPerson",
        "operationId": "updateContactPersonUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactPersonDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactPersonDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["contact-person-resource"],
        "summary": "deleteContactPerson",
        "operationId": "deleteContactPersonUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["contact-person-resource"],
        "summary": "partialUpdateContactPerson",
        "operationId": "partialUpdateContactPersonUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactPersonDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactPersonDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactPersonDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/contact-relations": {
      "get": {
        "tags": ["contact-relation-resource"],
        "summary": "getAllContactRelations",
        "operationId": "getAllContactRelationsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactRelationDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["contact-relation-resource"],
        "summary": "createContactRelation",
        "operationId": "createContactRelationUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRelationDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactRelationDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/contact-relations/{id}": {
      "get": {
        "tags": ["contact-relation-resource"],
        "summary": "getContactRelation",
        "operationId": "getContactRelationUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactRelationDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["contact-relation-resource"],
        "summary": "updateContactRelation",
        "operationId": "updateContactRelationUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRelationDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactRelationDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["contact-relation-resource"],
        "summary": "deleteContactRelation",
        "operationId": "deleteContactRelationUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["contact-relation-resource"],
        "summary": "partialUpdateContactRelation",
        "operationId": "partialUpdateContactRelationUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRelationDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRelationDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactRelationDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/contact-reminders": {
      "get": {
        "tags": ["contact-reminder-resource"],
        "summary": "getAllContactReminders",
        "operationId": "getAllContactRemindersUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactReminderDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["contact-reminder-resource"],
        "summary": "createContactReminder",
        "operationId": "createContactReminderUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactReminderDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactReminderDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/contact-reminders/{id}": {
      "get": {
        "tags": ["contact-reminder-resource"],
        "summary": "getContactReminder",
        "operationId": "getContactReminderUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactReminderDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["contact-reminder-resource"],
        "summary": "updateContactReminder",
        "operationId": "updateContactReminderUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactReminderDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactReminderDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["contact-reminder-resource"],
        "summary": "deleteContactReminder",
        "operationId": "deleteContactReminderUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["contact-reminder-resource"],
        "summary": "partialUpdateContactReminder",
        "operationId": "partialUpdateContactReminderUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactReminderDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactReminderDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactReminderDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/contacts": {
      "get": {
        "tags": ["contact-resource"],
        "summary": "getAllContacts",
        "operationId": "getAllContactsUsingGET",
        "parameters": [
          {
            "name": "eagerload",
            "in": "query",
            "description": "eagerload",
            "required": false,
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["contact-resource"],
        "summary": "createContact",
        "operationId": "createContactUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/contacts/{id}": {
      "get": {
        "tags": ["contact-resource"],
        "summary": "getContact",
        "operationId": "getContactUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["contact-resource"],
        "summary": "updateContact",
        "operationId": "updateContactUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["contact-resource"],
        "summary": "deleteContact",
        "operationId": "deleteContactUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["contact-resource"],
        "summary": "partialUpdateContact",
        "operationId": "partialUpdateContactUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/cost-units": {
      "get": {
        "tags": ["cost-unit-resource"],
        "summary": "getAllCostUnits",
        "operationId": "getAllCostUnitsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CostUnitDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["cost-unit-resource"],
        "summary": "createCostUnit",
        "operationId": "createCostUnitUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostUnitDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CostUnitDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/cost-units/{id}": {
      "get": {
        "tags": ["cost-unit-resource"],
        "summary": "getCostUnit",
        "operationId": "getCostUnitUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CostUnitDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["cost-unit-resource"],
        "summary": "updateCostUnit",
        "operationId": "updateCostUnitUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostUnitDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CostUnitDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["cost-unit-resource"],
        "summary": "deleteCostUnit",
        "operationId": "deleteCostUnitUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["cost-unit-resource"],
        "summary": "partialUpdateCostUnit",
        "operationId": "partialUpdateCostUnitUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostUnitDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CostUnitDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CostUnitDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/custom-fields": {
      "get": {
        "tags": ["custom-field-resource"],
        "summary": "getAllCustomFields",
        "operationId": "getAllCustomFieldsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomFieldDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["custom-field-resource"],
        "summary": "createCustomField",
        "operationId": "createCustomFieldUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/custom-fields/{id}": {
      "get": {
        "tags": ["custom-field-resource"],
        "summary": "getCustomField",
        "operationId": "getCustomFieldUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["custom-field-resource"],
        "summary": "updateCustomField",
        "operationId": "updateCustomFieldUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["custom-field-resource"],
        "summary": "deleteCustomField",
        "operationId": "deleteCustomFieldUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["custom-field-resource"],
        "summary": "partialUpdateCustomField",
        "operationId": "partialUpdateCustomFieldUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/custom-field-values": {
      "get": {
        "tags": ["custom-field-value-resource"],
        "summary": "getAllCustomFieldValues",
        "operationId": "getAllCustomFieldValuesUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomFieldValueDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["custom-field-value-resource"],
        "summary": "createCustomFieldValue",
        "operationId": "createCustomFieldValueUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldValueDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldValueDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/custom-field-values/{id}": {
      "get": {
        "tags": ["custom-field-value-resource"],
        "summary": "getCustomFieldValue",
        "operationId": "getCustomFieldValueUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldValueDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["custom-field-value-resource"],
        "summary": "updateCustomFieldValue",
        "operationId": "updateCustomFieldValueUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldValueDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldValueDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["custom-field-value-resource"],
        "summary": "deleteCustomFieldValue",
        "operationId": "deleteCustomFieldValueUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["custom-field-value-resource"],
        "summary": "partialUpdateCustomFieldValue",
        "operationId": "partialUpdateCustomFieldValueUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldValueDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldValueDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldValueDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/delivery-notes": {
      "get": {
        "tags": ["delivery-note-resource"],
        "summary": "getAllDeliveryNotes",
        "operationId": "getAllDeliveryNotesUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryNoteDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["delivery-note-resource"],
        "summary": "createDeliveryNote",
        "operationId": "createDeliveryNoteUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryNoteDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryNoteDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/delivery-notes/{id}": {
      "get": {
        "tags": ["delivery-note-resource"],
        "summary": "getDeliveryNote",
        "operationId": "getDeliveryNoteUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryNoteDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["delivery-note-resource"],
        "summary": "updateDeliveryNote",
        "operationId": "updateDeliveryNoteUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryNoteDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryNoteDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["delivery-note-resource"],
        "summary": "deleteDeliveryNote",
        "operationId": "deleteDeliveryNoteUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["delivery-note-resource"],
        "summary": "partialUpdateDeliveryNote",
        "operationId": "partialUpdateDeliveryNoteUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryNoteDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryNoteDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryNoteDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/descriptive-document-texts": {
      "get": {
        "tags": ["descriptive-document-text-resource"],
        "summary": "getAllDescriptiveDocumentTexts",
        "operationId": "getAllDescriptiveDocumentTextsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DescriptiveDocumentTextDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["descriptive-document-text-resource"],
        "summary": "createDescriptiveDocumentText",
        "operationId": "createDescriptiveDocumentTextUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DescriptiveDocumentTextDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DescriptiveDocumentTextDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/descriptive-document-texts/{id}": {
      "get": {
        "tags": ["descriptive-document-text-resource"],
        "summary": "getDescriptiveDocumentText",
        "operationId": "getDescriptiveDocumentTextUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DescriptiveDocumentTextDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["descriptive-document-text-resource"],
        "summary": "updateDescriptiveDocumentText",
        "operationId": "updateDescriptiveDocumentTextUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DescriptiveDocumentTextDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DescriptiveDocumentTextDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["descriptive-document-text-resource"],
        "summary": "deleteDescriptiveDocumentText",
        "operationId": "deleteDescriptiveDocumentTextUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["descriptive-document-text-resource"],
        "summary": "partialUpdateDescriptiveDocumentText",
        "operationId": "partialUpdateDescriptiveDocumentTextUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DescriptiveDocumentTextDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DescriptiveDocumentTextDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DescriptiveDocumentTextDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/document-free-texts": {
      "get": {
        "tags": ["document-free-text-resource"],
        "summary": "getAllDocumentFreeTexts",
        "operationId": "getAllDocumentFreeTextsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentFreeTextDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["document-free-text-resource"],
        "summary": "createDocumentFreeText",
        "operationId": "createDocumentFreeTextUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentFreeTextDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentFreeTextDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/document-free-texts/{id}": {
      "get": {
        "tags": ["document-free-text-resource"],
        "summary": "getDocumentFreeText",
        "operationId": "getDocumentFreeTextUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentFreeTextDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["document-free-text-resource"],
        "summary": "updateDocumentFreeText",
        "operationId": "updateDocumentFreeTextUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentFreeTextDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentFreeTextDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["document-free-text-resource"],
        "summary": "deleteDocumentFreeText",
        "operationId": "deleteDocumentFreeTextUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["document-free-text-resource"],
        "summary": "partialUpdateDocumentFreeText",
        "operationId": "partialUpdateDocumentFreeTextUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentFreeTextDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentFreeTextDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentFreeTextDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/document-invoice-workflows": {
      "get": {
        "tags": ["document-invoice-workflow-resource"],
        "summary": "getAllDocumentInvoiceWorkflows",
        "operationId": "getAllDocumentInvoiceWorkflowsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentInvoiceWorkflowDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["document-invoice-workflow-resource"],
        "summary": "createDocumentInvoiceWorkflow",
        "operationId": "createDocumentInvoiceWorkflowUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentInvoiceWorkflowDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentInvoiceWorkflowDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/document-invoice-workflows/{id}": {
      "get": {
        "tags": ["document-invoice-workflow-resource"],
        "summary": "getDocumentInvoiceWorkflow",
        "operationId": "getDocumentInvoiceWorkflowUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentInvoiceWorkflowDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["document-invoice-workflow-resource"],
        "summary": "updateDocumentInvoiceWorkflow",
        "operationId": "updateDocumentInvoiceWorkflowUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentInvoiceWorkflowDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentInvoiceWorkflowDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["document-invoice-workflow-resource"],
        "summary": "deleteDocumentInvoiceWorkflow",
        "operationId": "deleteDocumentInvoiceWorkflowUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["document-invoice-workflow-resource"],
        "summary": "partialUpdateDocumentInvoiceWorkflow",
        "operationId": "partialUpdateDocumentInvoiceWorkflowUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentInvoiceWorkflowDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentInvoiceWorkflowDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentInvoiceWorkflowDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/document-letters": {
      "get": {
        "tags": ["document-letter-resource"],
        "summary": "getAllDocumentLetters",
        "operationId": "getAllDocumentLettersUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentLetterDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["document-letter-resource"],
        "summary": "createDocumentLetter",
        "operationId": "createDocumentLetterUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentLetterDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentLetterDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/document-letters/{id}": {
      "get": {
        "tags": ["document-letter-resource"],
        "summary": "getDocumentLetter",
        "operationId": "getDocumentLetterUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentLetterDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["document-letter-resource"],
        "summary": "updateDocumentLetter",
        "operationId": "updateDocumentLetterUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentLetterDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentLetterDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["document-letter-resource"],
        "summary": "deleteDocumentLetter",
        "operationId": "deleteDocumentLetterUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["document-letter-resource"],
        "summary": "partialUpdateDocumentLetter",
        "operationId": "partialUpdateDocumentLetterUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentLetterDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentLetterDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentLetterDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/document-positions": {
      "get": {
        "tags": ["document-position-resource"],
        "summary": "getAllDocumentPositions",
        "operationId": "getAllDocumentPositionsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentPositionDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["document-position-resource"],
        "summary": "createDocumentPosition",
        "operationId": "createDocumentPositionUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentPositionDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentPositionDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/document-positions/{id}": {
      "get": {
        "tags": ["document-position-resource"],
        "summary": "getDocumentPosition",
        "operationId": "getDocumentPositionUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentPositionDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["document-position-resource"],
        "summary": "updateDocumentPosition",
        "operationId": "updateDocumentPositionUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentPositionDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentPositionDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["document-position-resource"],
        "summary": "deleteDocumentPosition",
        "operationId": "deleteDocumentPositionUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["document-position-resource"],
        "summary": "partialUpdateDocumentPosition",
        "operationId": "partialUpdateDocumentPositionUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentPositionDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentPositionDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentPositionDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/document-texts": {
      "get": {
        "tags": ["document-text-resource"],
        "summary": "getAllDocumentTexts",
        "operationId": "getAllDocumentTextsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentTextDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["document-text-resource"],
        "summary": "createDocumentText",
        "operationId": "createDocumentTextUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentTextDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentTextDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/document-texts/{id}": {
      "get": {
        "tags": ["document-text-resource"],
        "summary": "getDocumentText",
        "operationId": "getDocumentTextUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentTextDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["document-text-resource"],
        "summary": "updateDocumentText",
        "operationId": "updateDocumentTextUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentTextDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentTextDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["document-text-resource"],
        "summary": "deleteDocumentText",
        "operationId": "deleteDocumentTextUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["document-text-resource"],
        "summary": "partialUpdateDocumentText",
        "operationId": "partialUpdateDocumentTextUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentTextDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentTextDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentTextDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/efforts": {
      "get": {
        "tags": ["effort-resource"],
        "summary": "getAllEfforts",
        "operationId": "getAllEffortsUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EffortDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["effort-resource"],
        "summary": "createEffort",
        "operationId": "createEffortUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EffortDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EffortDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/efforts/{id}": {
      "get": {
        "tags": ["effort-resource"],
        "summary": "getEffort",
        "operationId": "getEffortUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EffortDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["effort-resource"],
        "summary": "updateEffort",
        "operationId": "updateEffortUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EffortDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EffortDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["effort-resource"],
        "summary": "deleteEffort",
        "operationId": "deleteEffortUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["effort-resource"],
        "summary": "partialUpdateEffort",
        "operationId": "partialUpdateEffortUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EffortDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EffortDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EffortDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/exchange-rates": {
      "get": {
        "tags": ["exchange-rate-resource"],
        "summary": "getAllExchangeRates",
        "operationId": "getAllExchangeRatesUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExchangeRateDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["exchange-rate-resource"],
        "summary": "createExchangeRate",
        "operationId": "createExchangeRateUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExchangeRateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeRateDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/exchange-rates/{id}": {
      "get": {
        "tags": ["exchange-rate-resource"],
        "summary": "getExchangeRate",
        "operationId": "getExchangeRateUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeRateDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["exchange-rate-resource"],
        "summary": "updateExchangeRate",
        "operationId": "updateExchangeRateUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExchangeRateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeRateDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["exchange-rate-resource"],
        "summary": "deleteExchangeRate",
        "operationId": "deleteExchangeRateUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["exchange-rate-resource"],
        "summary": "partialUpdateExchangeRate",
        "operationId": "partialUpdateExchangeRateUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExchangeRateDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExchangeRateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeRateDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/free-texts": {
      "get": {
        "tags": ["free-text-resource"],
        "summary": "getAllFreeTexts",
        "operationId": "getAllFreeTextsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FreeTextDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["free-text-resource"],
        "summary": "createFreeText",
        "operationId": "createFreeTextUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FreeTextDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FreeTextDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/free-texts/{id}": {
      "get": {
        "tags": ["free-text-resource"],
        "summary": "getFreeText",
        "operationId": "getFreeTextUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FreeTextDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["free-text-resource"],
        "summary": "updateFreeText",
        "operationId": "updateFreeTextUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FreeTextDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FreeTextDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["free-text-resource"],
        "summary": "deleteFreeText",
        "operationId": "deleteFreeTextUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["free-text-resource"],
        "summary": "partialUpdateFreeText",
        "operationId": "partialUpdateFreeTextUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FreeTextDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FreeTextDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FreeTextDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/invoices": {
      "get": {
        "tags": ["invoice-resource"],
        "summary": "getAllInvoices",
        "operationId": "getAllInvoicesUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["invoice-resource"],
        "summary": "createInvoice",
        "operationId": "createInvoiceUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/invoices/{id}": {
      "get": {
        "tags": ["invoice-resource"],
        "summary": "getInvoice",
        "operationId": "getInvoiceUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["invoice-resource"],
        "summary": "updateInvoice",
        "operationId": "updateInvoiceUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["invoice-resource"],
        "summary": "deleteInvoice",
        "operationId": "deleteInvoiceUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["invoice-resource"],
        "summary": "partialUpdateInvoice",
        "operationId": "partialUpdateInvoiceUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/isrs": {
      "get": {
        "tags": ["isr-resource"],
        "summary": "getAllIsrs",
        "operationId": "getAllIsrsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IsrDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["isr-resource"],
        "summary": "createIsr",
        "operationId": "createIsrUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IsrDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IsrDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/isrs/{id}": {
      "get": {
        "tags": ["isr-resource"],
        "summary": "getIsr",
        "operationId": "getIsrUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IsrDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["isr-resource"],
        "summary": "updateIsr",
        "operationId": "updateIsrUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IsrDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IsrDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["isr-resource"],
        "summary": "deleteIsr",
        "operationId": "deleteIsrUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["isr-resource"],
        "summary": "partialUpdateIsr",
        "operationId": "partialUpdateIsrUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IsrDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IsrDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IsrDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/layouts": {
      "get": {
        "tags": ["layout-resource"],
        "summary": "getAllLayouts",
        "operationId": "getAllLayoutsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LayoutDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["layout-resource"],
        "summary": "createLayout",
        "operationId": "createLayoutUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LayoutDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/layouts/{id}": {
      "get": {
        "tags": ["layout-resource"],
        "summary": "getLayout",
        "operationId": "getLayoutUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["layout-resource"],
        "summary": "updateLayout",
        "operationId": "updateLayoutUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LayoutDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["layout-resource"],
        "summary": "deleteLayout",
        "operationId": "deleteLayoutUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["layout-resource"],
        "summary": "partialUpdateLayout",
        "operationId": "partialUpdateLayoutUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LayoutDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LayoutDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LayoutDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/offers": {
      "get": {
        "tags": ["offer-resource"],
        "summary": "getAllOffers",
        "operationId": "getAllOffersUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OfferDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["offer-resource"],
        "summary": "createOffer",
        "operationId": "createOfferUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfferDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OfferDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/offers/{id}": {
      "get": {
        "tags": ["offer-resource"],
        "summary": "getOffer",
        "operationId": "getOfferUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OfferDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["offer-resource"],
        "summary": "updateOffer",
        "operationId": "updateOfferUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfferDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OfferDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["offer-resource"],
        "summary": "deleteOffer",
        "operationId": "deleteOfferUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["offer-resource"],
        "summary": "partialUpdateOffer",
        "operationId": "partialUpdateOfferUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfferDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OfferDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OfferDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/order-confirmations": {
      "get": {
        "tags": ["order-confirmation-resource"],
        "summary": "getAllOrderConfirmations",
        "operationId": "getAllOrderConfirmationsUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderConfirmationDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["order-confirmation-resource"],
        "summary": "createOrderConfirmation",
        "operationId": "createOrderConfirmationUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderConfirmationDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderConfirmationDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/order-confirmations/{id}": {
      "get": {
        "tags": ["order-confirmation-resource"],
        "summary": "getOrderConfirmation",
        "operationId": "getOrderConfirmationUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderConfirmationDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["order-confirmation-resource"],
        "summary": "updateOrderConfirmation",
        "operationId": "updateOrderConfirmationUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderConfirmationDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderConfirmationDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["order-confirmation-resource"],
        "summary": "deleteOrderConfirmation",
        "operationId": "deleteOrderConfirmationUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["order-confirmation-resource"],
        "summary": "partialUpdateOrderConfirmation",
        "operationId": "partialUpdateOrderConfirmationUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderConfirmationDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderConfirmationDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderConfirmationDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/owners": {
      "get": {
        "tags": ["owner-resource"],
        "summary": "getAllOwners",
        "operationId": "getAllOwnersUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OwnerDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["owner-resource"],
        "summary": "createOwner",
        "operationId": "createOwnerUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OwnerDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OwnerDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/owners/{id}": {
      "get": {
        "tags": ["owner-resource"],
        "summary": "getOwner",
        "operationId": "getOwnerUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OwnerDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["owner-resource"],
        "summary": "updateOwner",
        "operationId": "updateOwnerUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OwnerDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OwnerDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["owner-resource"],
        "summary": "deleteOwner",
        "operationId": "deleteOwnerUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["owner-resource"],
        "summary": "partialUpdateOwner",
        "operationId": "partialUpdateOwnerUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OwnerDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OwnerDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OwnerDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/permissions": {
      "get": {
        "tags": ["permission-resource"],
        "summary": "getAllPermissions",
        "operationId": "getAllPermissionsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["permission-resource"],
        "summary": "createPermission",
        "operationId": "createPermissionUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/permissions/{id}": {
      "get": {
        "tags": ["permission-resource"],
        "summary": "getPermission",
        "operationId": "getPermissionUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["permission-resource"],
        "summary": "updatePermission",
        "operationId": "updatePermissionUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["permission-resource"],
        "summary": "deletePermission",
        "operationId": "deletePermissionUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["permission-resource"],
        "summary": "partialUpdatePermission",
        "operationId": "partialUpdatePermissionUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/projects": {
      "get": {
        "tags": ["project-resource"],
        "summary": "getAllProjects",
        "operationId": "getAllProjectsUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["project-resource"],
        "summary": "createProject",
        "operationId": "createProjectUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/projects/{id}": {
      "get": {
        "tags": ["project-resource"],
        "summary": "getProject",
        "operationId": "getProjectUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["project-resource"],
        "summary": "updateProject",
        "operationId": "updateProjectUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["project-resource"],
        "summary": "deleteProject",
        "operationId": "deleteProjectUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["project-resource"],
        "summary": "partialUpdateProject",
        "operationId": "partialUpdateProjectUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/authorities": {
      "get": {
        "tags": ["public-user-resource"],
        "summary": "getAuthorities",
        "operationId": "getAuthoritiesUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": ["public-user-resource"],
        "summary": "getAllPublicUsers",
        "operationId": "getAllPublicUsersUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/reporting-activities": {
      "get": {
        "tags": ["reporting-activity-resource"],
        "summary": "getAllReportingActivities",
        "operationId": "getAllReportingActivitiesUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportingActivityDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["reporting-activity-resource"],
        "summary": "createReportingActivity",
        "operationId": "createReportingActivityUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingActivityDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportingActivityDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/reporting-activities/{id}": {
      "get": {
        "tags": ["reporting-activity-resource"],
        "summary": "getReportingActivity",
        "operationId": "getReportingActivityUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportingActivityDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["reporting-activity-resource"],
        "summary": "updateReportingActivity",
        "operationId": "updateReportingActivityUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingActivityDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportingActivityDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["reporting-activity-resource"],
        "summary": "deleteReportingActivity",
        "operationId": "deleteReportingActivityUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["reporting-activity-resource"],
        "summary": "partialUpdateReportingActivity",
        "operationId": "partialUpdateReportingActivityUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingActivityDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingActivityDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReportingActivityDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/resource-permissions": {
      "get": {
        "tags": ["resource-permission-resource"],
        "summary": "getAllResourcePermissions",
        "operationId": "getAllResourcePermissionsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResourcePermissionDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["resource-permission-resource"],
        "summary": "createResourcePermission",
        "operationId": "createResourcePermissionUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourcePermissionDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResourcePermissionDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/resource-permissions/{id}": {
      "get": {
        "tags": ["resource-permission-resource"],
        "summary": "getResourcePermission",
        "operationId": "getResourcePermissionUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResourcePermissionDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["resource-permission-resource"],
        "summary": "updateResourcePermission",
        "operationId": "updateResourcePermissionUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourcePermissionDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResourcePermissionDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["resource-permission-resource"],
        "summary": "deleteResourcePermission",
        "operationId": "deleteResourcePermissionUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["resource-permission-resource"],
        "summary": "partialUpdateResourcePermission",
        "operationId": "partialUpdateResourcePermissionUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourcePermissionDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourcePermissionDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResourcePermissionDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/signatures": {
      "get": {
        "tags": ["signature-resource"],
        "summary": "getAllSignatures",
        "operationId": "getAllSignaturesUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SignatureDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["signature-resource"],
        "summary": "createSignature",
        "operationId": "createSignatureUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignatureDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SignatureDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/signatures/{id}": {
      "get": {
        "tags": ["signature-resource"],
        "summary": "getSignature",
        "operationId": "getSignatureUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SignatureDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["signature-resource"],
        "summary": "updateSignature",
        "operationId": "updateSignatureUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignatureDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SignatureDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["signature-resource"],
        "summary": "deleteSignature",
        "operationId": "deleteSignatureUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["signature-resource"],
        "summary": "partialUpdateSignature",
        "operationId": "partialUpdateSignatureUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignatureDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SignatureDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SignatureDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/admin/users": {
      "get": {
        "tags": ["user-resource"],
        "summary": "getAllUsers",
        "operationId": "getAllUsersUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminUserDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["user-resource"],
        "summary": "updateUser",
        "operationId": "updateUserUsingPUT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUserDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["user-resource"],
        "summary": "createUser",
        "operationId": "createUserUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUserDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/admin/users/{login}": {
      "get": {
        "tags": ["user-resource"],
        "summary": "getUser",
        "operationId": "getUserUsingGET",
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "description": "login",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["user-resource"],
        "summary": "deleteUser",
        "operationId": "deleteUserUsingDELETE",
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "description": "login",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/value-added-taxes": {
      "get": {
        "tags": ["value-added-tax-resource"],
        "summary": "getAllValueAddedTaxes",
        "operationId": "getAllValueAddedTaxesUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValueAddedTaxDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["value-added-tax-resource"],
        "summary": "createValueAddedTax",
        "operationId": "createValueAddedTaxUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueAddedTaxDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ValueAddedTaxDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/value-added-taxes/{id}": {
      "get": {
        "tags": ["value-added-tax-resource"],
        "summary": "getValueAddedTax",
        "operationId": "getValueAddedTaxUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ValueAddedTaxDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["value-added-tax-resource"],
        "summary": "updateValueAddedTax",
        "operationId": "updateValueAddedTaxUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueAddedTaxDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ValueAddedTaxDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["value-added-tax-resource"],
        "summary": "deleteValueAddedTax",
        "operationId": "deleteValueAddedTaxUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["value-added-tax-resource"],
        "summary": "partialUpdateValueAddedTax",
        "operationId": "partialUpdateValueAddedTaxUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueAddedTaxDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ValueAddedTaxDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ValueAddedTaxDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/working-hours": {
      "get": {
        "tags": ["working-hour-resource"],
        "summary": "getAllWorkingHours",
        "operationId": "getAllWorkingHoursUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the requested page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of a page",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkingHourDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": ["working-hour-resource"],
        "summary": "createWorkingHour",
        "operationId": "createWorkingHourUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkingHourDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/WorkingHourDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/working-hours/{id}": {
      "get": {
        "tags": ["working-hour-resource"],
        "summary": "getWorkingHour",
        "operationId": "getWorkingHourUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/WorkingHourDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["working-hour-resource"],
        "summary": "updateWorkingHour",
        "operationId": "updateWorkingHourUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkingHourDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/WorkingHourDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["working-hour-resource"],
        "summary": "deleteWorkingHour",
        "operationId": "deleteWorkingHourUsingDELETE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["working-hour-resource"],
        "summary": "partialUpdateWorkingHour",
        "operationId": "partialUpdateWorkingHourUsingPATCH",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkingHourDTO"
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkingHourDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/WorkingHourDTO"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdminUserDTO": {
        "title": "AdminUserDTO",
        "required": ["login"],
        "type": "object",
        "properties": {
          "activated": {
            "type": "boolean"
          },
          "authorities": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "maxLength": 254,
            "minLength": 5,
            "type": "string"
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "imageUrl": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "langKey": {
            "maxLength": 10,
            "minLength": 2,
            "type": "string"
          },
          "lastModifiedBy": {
            "type": "string"
          },
          "lastModifiedDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "login": {
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$",
            "type": "string"
          }
        }
      },
      "ApplicationRoleDTO": {
        "title": "ApplicationRoleDTO",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "description": "Inherits from the User Role"
      },
      "ApplicationUserDTO": {
        "title": "ApplicationUserDTO",
        "required": ["shortCutName"],
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "description": "image of contact",
            "format": "byte"
          },
          "avatarContentType": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "imageType": {
            "type": "string",
            "description": "image type"
          },
          "inactiv": {
            "type": "boolean",
            "description": "is not active anymore",
            "example": false
          },
          "memberSince": {
            "type": "string",
            "description": "member since",
            "format": "date"
          },
          "shortCutName": {
            "type": "string",
            "description": "short user name"
          }
        },
        "description": "Inherits from the User"
      },
      "BankAccountDTO": {
        "title": "BankAccountDTO",
        "type": "object",
        "properties": {
          "autoSync": {
            "type": "string",
            "description": "one of: [active, inactive, requested]",
            "enum": ["ACTIVE", "INACTIVE", "REQUESTED"]
          },
          "autoSyncDirection": {
            "type": "string",
            "description": "[in, out, null (means no direction specified)]",
            "enum": ["IN", "OUT"]
          },
          "bankName": {
            "type": "string",
            "description": "The Bank Name"
          },
          "bic": {
            "type": "string",
            "description": "BIC/SWIFT Code"
          },
          "currency": {
            "type": "string",
            "description": "ISO currency name o",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BYR",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XFU",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW"
            ]
          },
          "defaultBankAccount": {
            "type": "boolean",
            "description": "whether it is a default bank account",
            "example": false
          },
          "description": {
            "type": "string",
            "description": "The account description"
          },
          "iban": {
            "type": "string",
            "description": "IBAN Number"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "inactiv": {
            "type": "boolean",
            "description": "is not active anymore",
            "example": false
          },
          "number": {
            "type": "string",
            "description": "Account Number"
          },
          "postAccount": {
            "type": "string",
            "description": "bank’s postal account"
          },
          "remoteId": {
            "type": "integer",
            "description": "id of a remote system",
            "format": "int32"
          }
        },
        "description": "The owner company bank account"
      },
      "CatalogCategoryDTO": {
        "title": "CatalogCategoryDTO",
        "required": ["name"],
        "type": "object",
        "properties": {
          "accountingAccountNumber": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "inactiv": {
            "type": "boolean",
            "description": "is not active anymore",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "Category name"
          },
          "remoteId": {
            "type": "integer",
            "description": "id of a remote system",
            "format": "int32"
          },
          "usage": {
            "type": "integer",
            "description": "how many catalog items are using this category",
            "format": "int32"
          }
        },
        "description": "Category for Products or Services"
      },
      "CatalogProductDTO": {
        "title": "CatalogProductDTO",
        "required": ["name"],
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/CatalogCategoryDTO"
          },
          "categoryName": {
            "type": "string",
            "description": "Category Name"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "defaultAmount": {
            "type": "integer",
            "description": "Default amount of products (Standard Menge)",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Catalog Product Description"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "inactiv": {
            "type": "boolean",
            "description": "is not active anymore",
            "example": false
          },
          "includingVat": {
            "type": "boolean",
            "description": "The price includes MWST",
            "example": false
          },
          "inventoryAvailable": {
            "type": "number",
            "description": "Available Products in Inventory",
            "format": "double"
          },
          "inventoryReserved": {
            "type": "number",
            "description": "Reserved Products in Inventory",
            "format": "double"
          },
          "name": {
            "type": "string",
            "description": "Catalog Product Name"
          },
          "notes": {
            "type": "string",
            "description": "Catalog Product Notes"
          },
          "number": {
            "type": "string",
            "description": "Catalog Product Number"
          },
          "price": {
            "type": "number",
            "description": "The sales price of the product",
            "format": "double"
          },
          "pricePurchase": {
            "type": "number",
            "description": "The purchase price of the product",
            "format": "double"
          },
          "remoteId": {
            "type": "integer",
            "description": "id of a remote system",
            "format": "int32"
          },
          "unit": {
            "$ref": "#/components/schemas/CatalogUnitDTO"
          },
          "unitName": {
            "type": "string",
            "description": "The unit Name"
          },
          "valueAddedTax": {
            "$ref": "#/components/schemas/ValueAddedTaxDTO"
          },
          "vat": {
            "type": "number",
            "description": "The VAT Percent",
            "format": "double"
          }
        },
        "description": "Standard Products"
      },
      "CatalogServiceDTO": {
        "title": "CatalogServiceDTO",
        "required": ["name"],
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/CatalogCategoryDTO"
          },
          "categoryName": {
            "type": "string",
            "description": "Category Name"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "defaultAmount": {
            "type": "integer",
            "description": "Default amount of products (Standard Menge)",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Catalog Product Description"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "inactiv": {
            "type": "boolean",
            "description": "is not active anymore",
            "example": false
          },
          "includingVat": {
            "type": "boolean",
            "description": "The price includes MWST",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "Catalog Product Name"
          },
          "notes": {
            "type": "string",
            "description": "Catalog Product Notes"
          },
          "number": {
            "type": "string",
            "description": "Catalog Product Number"
          },
          "price": {
            "type": "number",
            "description": "The sales price of the product",
            "format": "double"
          },
          "remoteId": {
            "type": "integer",
            "description": "id of a remote system",
            "format": "int32"
          },
          "unit": {
            "$ref": "#/components/schemas/CatalogUnitDTO"
          },
          "unitName": {
            "type": "string",
            "description": "The unit Name"
          },
          "valueAddedTax": {
            "$ref": "#/components/schemas/ValueAddedTaxDTO"
          },
          "vat": {
            "type": "number",
            "description": "The VAT Percent",
            "format": "double"
          }
        }
      },
      "CatalogUnitDTO": {
        "title": "CatalogUnitDTO",
        "required": ["name"],
        "type": "object",
        "properties": {
          "custom": {
            "type": "boolean",
            "description": "is unit a custom company unit (if not, it's a system unit)",
            "example": false
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "inactiv": {
            "type": "boolean",
            "description": "is not active anymore",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "Name of the Unit"
          },
          "nameDe": {
            "type": "string"
          },
          "nameEn": {
            "type": "string"
          },
          "nameFr": {
            "type": "string"
          },
          "nameIt": {
            "type": "string"
          },
          "remoteId": {
            "type": "integer",
            "description": "id of a remote system",
            "format": "int32"
          },
          "scope": {
            "type": "string",
            "description": "scope, one of: s - service, p - product, a - all",
            "enum": ["ALL", "PRODUCT", "SERVICE"]
          }
        },
        "description": "System Units\n\n14  -         All\n17  Credit    All\n13  Flat      All\n7  Item      Product\n9  Litres    Product\n16  Metres    Product\n15  Minutes   All\n8  kg        Product\n12  km        All\n10  m2        Product\n11  m3        Product"
      },
      "ContactAccountDTO": {
        "title": "ContactAccountDTO",
        "type": "object",
        "properties": {
          "bic": {
            "type": "string",
            "description": "The BIC or SWIFT number"
          },
          "contact": {
            "$ref": "#/components/schemas/ContactDTO"
          },
          "defaultAccount": {
            "type": "boolean",
            "description": "whether it is a default contact's account ,",
            "example": false
          },
          "description": {
            "type": "string",
            "description": "internal description"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "inactiv": {
            "type": "boolean",
            "description": "is not active anymore",
            "example": false
          },
          "number": {
            "type": "string",
            "description": "IBAN or ISR number (depends on the type)"
          },
          "remoteId": {
            "type": "integer",
            "description": "id of a remote system",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "description": "type (possible values: IBAN, ISR) ,",
            "enum": ["IBAN_NUMBER", "ORANGE_IMPAYMENT", "QR_CODE", "QR_CODE_WITH_REFERENCE"]
          }
        },
        "description": "Bank or Postfinance account of the Contact"
      },
      "ContactAddressDTO": {
        "title": "ContactAddressDTO",
        "required": ["country", "defaultAddress", "defaultPrepage", "hideOnDocuments"],
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "city"
          },
          "contact": {
            "$ref": "#/components/schemas/ContactDTO"
          },
          "country": {
            "type": "string",
            "description": "country ISO2 code (eg. CH)",
            "enum": [
              "AD",
              "AE",
              "AF",
              "AG",
              "AI",
              "AL",
              "AM",
              "AN",
              "AO",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AW",
              "AZ",
              "BA",
              "BB",
              "BD",
              "BE",
              "BF",
              "BG",
              "BH",
              "BI",
              "BJ",
              "BL",
              "BM",
              "BN",
              "BO",
              "BR",
              "BS",
              "BT",
              "BW",
              "BY",
              "BZ",
              "CA",
              "CC",
              "CD",
              "CF",
              "CG",
              "CH",
              "CI",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CR",
              "CU",
              "CV",
              "CX",
              "CY",
              "CZ",
              "DE",
              "DJ",
              "DK",
              "DM",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EG",
              "ER",
              "ES",
              "ET",
              "FI",
              "FJ",
              "FK",
              "FM",
              "FO",
              "FR",
              "GA",
              "GB",
              "GD",
              "GE",
              "GH",
              "GI",
              "GL",
              "GM",
              "GN",
              "GQ",
              "GR",
              "GT",
              "GU",
              "GW",
              "GY",
              "HK",
              "HN",
              "HR",
              "HT",
              "HU",
              "ID",
              "IE",
              "IL",
              "IM",
              "IN",
              "IQ",
              "IR",
              "IS",
              "IT",
              "JM",
              "JO",
              "JP",
              "KE",
              "KG",
              "KH",
              "KI",
              "KM",
              "KN",
              "KP",
              "KR",
              "KW",
              "KY",
              "KZ",
              "LA",
              "LB",
              "LC",
              "LI",
              "LK",
              "LR",
              "LS",
              "LT",
              "LU",
              "LV",
              "LY",
              "MA",
              "MC",
              "MD",
              "ME",
              "MF",
              "MG",
              "MH",
              "MK",
              "ML",
              "MM",
              "MN",
              "MO",
              "MP",
              "MR",
              "MS",
              "MT",
              "MU",
              "MV",
              "MW",
              "MX",
              "MY",
              "MZ",
              "NA",
              "NC",
              "NE",
              "NG",
              "NI",
              "NL",
              "NO",
              "NP",
              "NR",
              "NU",
              "NZ",
              "OM",
              "PA",
              "PE",
              "PF",
              "PG",
              "PH",
              "PK",
              "PL",
              "PM",
              "PN",
              "PR",
              "PT",
              "PW",
              "PY",
              "QA",
              "RO",
              "RS",
              "RU",
              "RW",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SG",
              "SH",
              "SI",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SR",
              "ST",
              "SV",
              "SY",
              "SZ",
              "TC",
              "TD",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TO",
              "TR",
              "TT",
              "TV",
              "TW",
              "TZ",
              "UA",
              "UG",
              "US",
              "UY",
              "UZ",
              "VA",
              "VC",
              "VE",
              "VG",
              "VI",
              "VN",
              "VU",
              "WF",
              "WS",
              "YE",
              "YT",
              "ZA",
              "ZM",
              "ZW"
            ]
          },
          "defaultAddress": {
            "type": "boolean",
            "description": "whether it is a default contact's address",
            "example": false
          },
          "defaultPrepage": {
            "type": "boolean",
            "description": "whether the address is a default postal address",
            "example": false
          },
          "hideOnDocuments": {
            "type": "boolean",
            "description": "whether to hide this address on documents",
            "example": false
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "inactiv": {
            "type": "boolean",
            "description": "is not active anymore",
            "example": false
          },
          "postcode": {
            "type": "string",
            "description": "post code oder zip code"
          },
          "remoteId": {
            "type": "integer",
            "description": "id of a remote system",
            "format": "int32"
          },
          "street": {
            "type": "string",
            "description": "the street of the address"
          },
          "street2": {
            "type": "string",
            "description": "additional address information (state)"
          },
          "streetNo": {
            "type": "string",
            "description": "number of apartment"
          }
        }
      },
      "ContactDTO": {
        "title": "ContactDTO",
        "required": ["gender", "genderSalutationActive", "name", "type"],
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "description": "image of contact",
            "format": "byte"
          },
          "avatarContentType": {
            "type": "string"
          },
          "birthDate": {
            "type": "string",
            "description": "contact birthday",
            "format": "date"
          },
          "birthPlace": {
            "type": "string",
            "description": "contact birth place"
          },
          "citizenCountry1": {
            "type": "string",
            "description": "citizen of country 1"
          },
          "citizenCountry2": {
            "type": "string",
            "description": "citizen of country 1"
          },
          "communicationChannel": {
            "type": "string",
            "description": "possible values: U - No preference, E - Documents by e-mail, P - Documents by post",
            "enum": ["BY_EMAIL", "BY_POST", "NO_PREFERENCE"]
          },
          "communicationLanguage": {
            "type": "string",
            "description": "main communication language"
          },
          "communicationNewsletter": {
            "type": "string",
            "description": "possible values: A - Send to main e-mail address and contacts, M - Only send to main e-mail address, N - No newsletter wanted",
            "enum": ["NO_NEWS_LETTER", "SEND_ADDRESS_AND_CONTACTS", "SEND_TO_MAIN_CONTACT_ONLY"]
          },
          "contactAttribute01": {
            "type": "string",
            "description": "attribute 1"
          },
          "created": {
            "type": "string",
            "description": "when contact was created",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "description": "default currency",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BYR",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XFU",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW"
            ]
          },
          "dailyWork": {
            "type": "string",
            "description": "day structure"
          },
          "discountRate": {
            "type": "number",
            "description": "default discount rate",
            "format": "double"
          },
          "discountType": {
            "type": "string",
            "description": "default discount type; possible values P - in %, A - Amount",
            "enum": ["AMOUNT", "IN_PERCENT"]
          },
          "ebillAccountId": {
            "type": "string",
            "description": "e-bill account identification number"
          },
          "email": {
            "type": "string",
            "description": "contact email address"
          },
          "fax": {
            "type": "string",
            "description": "contact fax number"
          },
          "gender": {
            "type": "string",
            "description": "gender of contact (required for P type); possible values: M - Male, F - Female, O - Other",
            "enum": ["FEMALE", "MALE", "OTHER"]
          },
          "genderSalutationActive": {
            "type": "boolean",
            "description": "whether to show Mr./Ms. before contact name (for P type only)",
            "example": false
          },
          "groups": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactGroupDTO"
            }
          },
          "hobbies": {
            "type": "string",
            "description": "hobbies and activities in free time"
          },
          "hourlyRate": {
            "type": "number",
            "description": "cost per hour",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "imageType": {
            "type": "string",
            "description": "image type"
          },
          "inactiv": {
            "type": "boolean",
            "description": "is not active anymore",
            "example": false
          },
          "mainAddressId": {
            "type": "integer",
            "description": "main address id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "name of contact"
          },
          "nameAddition": {
            "type": "string",
            "description": "additional text for contact name (maiden name)"
          },
          "notes": {
            "type": "string",
            "description": "additional notes"
          },
          "number": {
            "type": "string",
            "description": "unique number"
          },
          "paymentGrace": {
            "type": "integer",
            "description": "default payment deadline",
            "format": "int32"
          },
          "phone": {
            "type": "string",
            "description": "contact phone number"
          },
          "placeOfOrigin": {
            "type": "string",
            "description": "contact place of origin"
          },
          "relations": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactRelationDTO"
            }
          },
          "remoteId": {
            "type": "integer",
            "description": "id of a remote system",
            "format": "int32"
          },
          "salutation": {
            "type": "string",
            "description": "e.g. Dear Mr. Jones"
          },
          "socialSecurityNumber": {
            "type": "string",
            "description": "the social security number"
          },
          "type": {
            "type": "string",
            "description": "type of contact; possible values: C - Company, P - Private",
            "enum": ["COMPANY", "PRIVATE"]
          },
          "vatIdentification": {
            "type": "string",
            "description": "VAT identification number"
          },
          "vatRate": {
            "type": "number",
            "description": "default VAT rate",
            "format": "double"
          },
          "website": {
            "type": "string",
            "description": "contact website address"
          }
        },
        "description": "Contact"
      },
      "ContactGroupDTO": {
        "title": "ContactGroupDTO",
        "required": ["name"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "Name of the contact group"
          },
          "remoteId": {
            "type": "integer",
            "description": "id of a remote system",
            "format": "int32"
          },
          "usage": {
            "type": "integer",
            "description": "how many contacts are assigned to this group ,",
            "format": "int32"
          }
        },
        "description": "The group a contact belongs to"
      },
      "ContactPersonDTO": {
        "title": "ContactPersonDTO",
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "description": "image of contact",
            "format": "byte"
          },
          "avatarContentType": {
            "type": "string"
          },
          "birthDate": {
            "type": "string",
            "description": "contact birthdate",
            "format": "date"
          },
          "birthPlace": {
            "type": "string",
            "description": "contact birth place"
          },
          "citizenCountry1": {
            "type": "string",
            "description": "citizen of country 1"
          },
          "citizenCountry2": {
            "type": "string",
            "description": "citizen of country 1"
          },
          "contact": {
            "$ref": "#/components/schemas/ContactDTO"
          },
          "contactAttribute01": {
            "type": "string",
            "description": "attribute 1"
          },
          "dailyWork": {
            "type": "string",
            "description": "day structure"
          },
          "defaultPerson": {
            "type": "boolean",
            "description": "whether it is a default contact's person",
            "example": false
          },
          "department": {
            "type": "string",
            "description": "the person's department"
          },
          "email": {
            "type": "string",
            "description": "The person's eMail"
          },
          "gender": {
            "type": "string",
            "description": "gender of contact (required for P type); possible values: M - Male, F - Female, O - Other",
            "enum": ["FEMALE", "MALE", "OTHER"]
          },
          "hobbies": {
            "type": "string",
            "description": "hobbies and activities in freetime"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "imageType": {
            "type": "string",
            "description": "image type"
          },
          "inactiv": {
            "type": "boolean",
            "description": "is not active anymore",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "the person first name"
          },
          "phone": {
            "type": "string",
            "description": "the person's phone number"
          },
          "placeOfOrigin": {
            "type": "string",
            "description": "contact place of origin"
          },
          "remoteId": {
            "type": "integer",
            "description": "id of a remote system",
            "format": "int32"
          },
          "salutation": {
            "type": "string",
            "description": "e.g. Dear Mr. Jones"
          },
          "showDepartment": {
            "type": "boolean",
            "description": "whether to show department",
            "example": false
          },
          "showTitle": {
            "type": "boolean",
            "description": "whether to show Mr/Ms before name",
            "example": false
          },
          "socialSecurityNumber": {
            "type": "string",
            "description": "the social security number"
          },
          "surname": {
            "type": "string",
            "description": "the person surname"
          },
          "wantsNewsletter": {
            "type": "boolean",
            "description": "whether person wishes to receive newsletter",
            "example": false
          }
        },
        "description": "A person of the contact"
      },
      "ContactRelationDTO": {
        "title": "ContactRelationDTO",
        "type": "object",
        "properties": {
          "contactRelationType": {
            "type": "string",
            "description": "type of contact's relation; possible values: type of contact's relation; possible values: CL - Customer, CR - Creditor, TE - TEAM, OF - Authorities (Behörden), ME - Medical, OT - Others",
            "enum": ["AUTORITY", "CREDITOR", "CUSTOMER", "MEDICAL", "OTHERS", "TEAM"]
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ContactReminderDTO": {
        "title": "ContactReminderDTO",
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/ContactDTO"
          },
          "contactName": {
            "type": "string",
            "description": "optional: name of a contact"
          },
          "dateTime": {
            "type": "string",
            "description": "date and time of event that should be reminded (format: IOS8601) ,",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "description of reminder"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "inactiv": {
            "type": "boolean",
            "description": "is not active anymore",
            "example": false
          },
          "intervalType": {
            "type": "string",
            "description": "one of: ['hour','day','month']",
            "enum": ["DAY", "HOUR", "MONTH"]
          },
          "intervalValue": {
            "type": "integer",
            "description": "value of interval in which reminder will be activated , /",
            "format": "int32"
          },
          "remoteId": {
            "type": "integer",
            "description": "id of a remote system",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "title of reminder"
          }
        }
      },
      "CostUnitDTO": {
        "title": "CostUnitDTO",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "cost unit's description"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "inactiv": {
            "type": "boolean",
            "description": "is not active anymore",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "cost unit's name"
          },
          "number": {
            "type": "string",
            "description": "cost unit's (Kostenstelle) internal number"
          },
          "remoteId": {
            "type": "integer",
            "description": "id of a remote system",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "description": "cost unit's type: one of: ['P','U'] ,",
            "enum": ["NOT_PRODUCTIVE", "PRODUCTIVE"]
          }
        }
      },
      "CustomFieldDTO": {
        "title": "CustomFieldDTO",
        "required": ["key", "name"],
        "type": "object",
        "properties": {
          "defaultValue": {
            "type": "string",
            "description": "the value of the resource"
          },
          "domainArea": {
            "type": "string",
            "description": "the custom field if for the domain resource",
            "enum": [
              "CONTACTS",
              "DELIVERY_NOTES",
              "INVOICES",
              "LETTERS",
              "OFFERS",
              "ORDER_CONFIRMATIONS",
              "PRODUCTS",
              "PROJECTS",
              "REPORTING",
              "SERVICES",
              "USERS"
            ]
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "key": {
            "type": "string",
            "description": "the key to identify the custom field"
          },
          "name": {
            "type": "string",
            "description": "a name which appears on the dialog"
          }
        },
        "description": "Additional information for a resource"
      },
      "CustomFieldValueDTO": {
        "title": "CustomFieldValueDTO",
        "required": ["key", "name"],
        "type": "object",
        "properties": {
          "catalogProduct": {
            "$ref": "#/components/schemas/CatalogProductDTO"
          },
          "catalogService": {
            "$ref": "#/components/schemas/CatalogServiceDTO"
          },
          "contact": {
            "$ref": "#/components/schemas/ContactDTO"
          },
          "contactPerson": {
            "$ref": "#/components/schemas/ContactPersonDTO"
          },
          "customField": {
            "$ref": "#/components/schemas/CustomFieldDTO"
          },
          "deliveryNote": {
            "$ref": "#/components/schemas/DeliveryNoteDTO"
          },
          "documentLetter": {
            "$ref": "#/components/schemas/DocumentLetterDTO"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "key": {
            "type": "string",
            "description": "the key to identify the custom field"
          },
          "name": {
            "type": "string",
            "description": "a name which appears on the dialog"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectDTO"
          },
          "value": {
            "type": "string",
            "description": "the value of the resource"
          }
        },
        "description": "Additional information for a resource"
      },
      "DeliveryNoteDTO": {
        "title": "DeliveryNoteDTO",
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/ContactDTO"
          },
          "contactAddress": {
            "$ref": "#/components/schemas/ContactAddressDTO"
          },
          "contactName": {
            "type": "string",
            "description": "name of a contact"
          },
          "contactPerson": {
            "$ref": "#/components/schemas/ContactPersonDTO"
          },
          "contactPrePageAddress": {
            "$ref": "#/components/schemas/ContactAddressDTO"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "description": "currency (e.g. CHF, EUR)",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BYR",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XFU",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW"
            ]
          },
          "date": {
            "type": "string",
            "description": "date of the document",
            "format": "date"
          },
          "discountRate": {
            "type": "number",
            "description": "optional discount rate",
            "format": "double"
          },
          "discountType": {
            "type": "string",
            "description": "optional discount type; possible values: A - amount, P - in %",
            "enum": ["AMOUNT", "IN_PERCENT"]
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "language": {
            "type": "string",
            "description": "language; possible values: de, en, es, fr, it ,",
            "enum": ["ENGLISH", "FRENCH", "GERMAN", "ITALIAN", "SPANISH"]
          },
          "layout": {
            "$ref": "#/components/schemas/LayoutDTO"
          },
          "notes": {
            "type": "string",
            "description": "optional notes"
          },
          "number": {
            "type": "string",
            "description": "document number"
          },
          "pageAmount": {
            "type": "integer",
            "description": "how many pages the document has",
            "format": "int32"
          },
          "periodText": {
            "type": "string",
            "description": "service/delivery"
          },
          "remoteId": {
            "type": "integer",
            "description": "id of a remote system",
            "format": "int32"
          },
          "signature": {
            "$ref": "#/components/schemas/SignatureDTO"
          },
          "status": {
            "type": "string",
            "description": "status of delivery note, possible values: DR - draft, S - sent, B - billed, D - deleted (but still visible)",
            "enum": ["BILLED", "DELETED", "DRAFT", "SENT"]
          },
          "total": {
            "type": "number",
            "description": "total amount of the delivery note",
            "format": "double"
          },
          "vatIncluded": {
            "type": "boolean",
            "description": "whether prices in delivery note include VAT",
            "example": false
          }
        }
      },
      "DescriptiveDocumentTextDTO": {
        "title": "DescriptiveDocumentTextDTO",
        "type": "object",
        "properties": {
          "conditions": {
            "type": "string",
            "description": "Document conditions text (z.B. Zahlungsbedinungen)"
          },
          "deliveryNote": {
            "$ref": "#/components/schemas/DeliveryNoteDTO"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "introduction": {
            "type": "string",
            "description": "Document introduction text"
          },
          "invoice": {
            "$ref": "#/components/schemas/InvoiceDTO"
          },
          "offer": {
            "$ref": "#/components/schemas/OfferDTO"
          },
          "orderConfirmation": {
            "$ref": "#/components/schemas/OrderConfirmationDTO"
          },
          "status": {
            "type": "string",
            "description": "for invoice only",
            "enum": ["DEBT_COLLECTION", "DEFAULT", "FIRST_REMINDER", "PAYMENT_REMINDER", "RECEIPT", "SECOND_REMINDER", "THIRD_REMINDER"]
          },
          "title": {
            "type": "string",
            "description": "Document title text"
          }
        }
      },
      "DocumentFreeTextDTO": {
        "title": "DocumentFreeTextDTO",
        "type": "object",
        "properties": {
          "deliveryNote": {
            "$ref": "#/components/schemas/DeliveryNoteDTO"
          },
          "documentLetter": {
            "$ref": "#/components/schemas/DocumentLetterDTO"
          },
          "fontSize": {
            "type": "integer",
            "description": "font size of displayed text (min: 1; max: 50)",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "invoice": {
            "$ref": "#/components/schemas/InvoiceDTO"
          },
          "offer": {
            "$ref": "#/components/schemas/OfferDTO"
          },
          "orderConfirmation": {
            "$ref": "#/components/schemas/OrderConfirmationDTO"
          },
          "pageNo": {
            "type": "integer",
            "description": "which page text is displayed on",
            "format": "int32"
          },
          "positionX": {
            "type": "number",
            "description": "The x position of the free text",
            "format": "double"
          },
          "positionY": {
            "type": "number",
            "description": "The y position of the free text",
            "format": "double"
          },
          "text": {
            "type": "string",
            "description": "displayed text"
          }
        },
        "description": "free texts objects"
      },
      "DocumentInvoiceWorkflowDTO": {
        "title": "DocumentInvoiceWorkflowDTO",
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "action that should be taken; possible values: M - remind me, CE - remind contact by email, CP - remind contact by post",
            "enum": ["REMIND_CONTACT_BY_EMAIL", "REMIND_CONTACT_BY_POST", "REMIND_ME"]
          },
          "active": {
            "type": "boolean",
            "description": "whether workflow is active",
            "example": false
          },
          "contactEmail": {
            "type": "string",
            "description": "email address for reminding contact (valid only when action is CE)"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "overdueDays": {
            "type": "integer",
            "description": "how many days after due date action should be taken ,",
            "format": "int32"
          },
          "speed": {
            "type": "string",
            "description": "post speed for reminding contact (valid only when action is CP); possible values: P - priority, E - economy",
            "enum": ["ECONOMY", "PRIORIRY"]
          },
          "status": {
            "type": "string",
            "description": "status of a document that the workflow is for; possible values: R - payment reminder, R1 - 1st reminder, R2 - 2nd reminder, R3 - 3rd reminder",
            "enum": ["FIRST_REMINDER", "PAYMENT_REMINDER", "SECOND_REMINDER", "THIRD_REMINDER"]
          }
        },
        "description": "Defining the workflow of the invoice with  R - payment reminder, R1 - 1st reminder, R2 - 2nd reminder, R3 - 3rd reminder"
      },
      "DocumentLetterDTO": {
        "title": "DocumentLetterDTO",
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/ContactDTO"
          },
          "contactAddress": {
            "$ref": "#/components/schemas/ContactAddressDTO"
          },
          "contactName": {
            "type": "string",
            "description": "name of a contact"
          },
          "contactPerson": {
            "$ref": "#/components/schemas/ContactPersonDTO"
          },
          "contactPrePageAddress": {
            "$ref": "#/components/schemas/ContactAddressDTO"
          },
          "content": {
            "type": "string",
            "description": "content of the document"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "date": {
            "type": "string",
            "description": "date of the letter",
            "format": "date"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "language": {
            "type": "string",
            "description": "language; possible values: de, en, es, fr, it ,",
            "enum": ["ENGLISH", "FRENCH", "GERMAN", "ITALIAN", "SPANISH"]
          },
          "layout": {
            "$ref": "#/components/schemas/LayoutDTO"
          },
          "notes": {
            "type": "string",
            "description": "optional notes"
          },
          "pageAmount": {
            "type": "integer",
            "description": "how many pages the document has",
            "format": "int32"
          },
          "remoteId": {
            "type": "integer",
            "description": "id of a remote system",
            "format": "int32"
          },
          "signature": {
            "$ref": "#/components/schemas/SignatureDTO"
          },
          "status": {
            "type": "string",
            "description": "status of letter, possible values: DR - draft, S - sent, D - deleted (but still visible)",
            "enum": ["DELETED", "DRAFT", "SENT"]
          },
          "title": {
            "type": "string",
            "description": "title of the document"
          }
        }
      },
      "DocumentPositionDTO": {
        "title": "DocumentPositionDTO",
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "amount; required for N type",
            "format": "double"
          },
          "catalogType": {
            "type": "string",
            "description": "position catalog type; possible values: P - product, S - service",
            "enum": ["ALL", "PRODUCT", "SERVICE"]
          },
          "deliveryNote": {
            "$ref": "#/components/schemas/DeliveryNoteDTO"
          },
          "description": {
            "type": "string",
            "description": "position description"
          },
          "discountRate": {
            "type": "number",
            "description": "optional discount rate",
            "format": "double"
          },
          "discountType": {
            "type": "string",
            "description": "optional discount type; possible values:A - amount, P - percentage",
            "enum": ["AMOUNT", "IN_PERCENT"]
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "invoice": {
            "$ref": "#/components/schemas/InvoiceDTO"
          },
          "name": {
            "type": "string",
            "description": "position name"
          },
          "number": {
            "type": "string",
            "description": "catalog unique number"
          },
          "offer": {
            "$ref": "#/components/schemas/OfferDTO"
          },
          "orderConfirmation": {
            "$ref": "#/components/schemas/OrderConfirmationDTO"
          },
          "price": {
            "type": "number",
            "description": "price per unit; required for N type",
            "format": "double"
          },
          "showOnlyTotal": {
            "type": "boolean",
            "description": "whether to show only total on invoice",
            "example": false
          },
          "total": {
            "type": "number",
            "description": "total price",
            "format": "double"
          },
          "type": {
            "type": "string",
            "description": "position type; possible values: N - normal, T - text, PB - page break, H - header, SI - subtotal (incremental), SNI - subtotal (non incremental)",
            "enum": ["HEADER", "NORMAL", "PAGE_BREAK", "SUBTOTAL_INCREMENTAL", "SUBTOTAL_NON_INCREMENTAL", "TEXT"]
          },
          "unit": {
            "$ref": "#/components/schemas/CatalogUnitDTO"
          },
          "vat": {
            "type": "number",
            "description": "VAT rate; required for N type",
            "format": "double"
          }
        },
        "description": "the document position"
      },
      "DocumentTextDTO": {
        "title": "DocumentTextDTO",
        "type": "object",
        "properties": {
          "defaultText": {
            "type": "boolean",
            "description": "default text",
            "example": false
          },
          "documentType": {
            "type": "string",
            "description": "which Receivable document is the information for; possible values: O - Offer, C - Order Confirmation, D - Delivery Note, I - Invoice",
            "enum": ["DELIVERY_NOTE", "INVOICE", "OFFER", "ORDER_CONFIRMATION"]
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "language": {
            "type": "string",
            "description": "language; possible values: de, en, es, fr, it ,",
            "enum": ["ENGLISH", "FRENCH", "GERMAN", "ITALIAN", "SPANISH"]
          },
          "status": {
            "type": "string",
            "description": "for invoice only",
            "enum": ["DEBT_COLLECTION", "DEFAULT", "FIRST_REMINDER", "PAYMENT_REMINDER", "RECEIPT", "SECOND_REMINDER", "THIRD_REMINDER"]
          },
          "text": {
            "type": "string",
            "description": "Document conditions text (z.B. Zahlungsbedingungen)"
          },
          "type": {
            "type": "string",
            "description": "which document type is the condition for; possible values: D - Document, E- Email",
            "enum": ["DOCUMENT", "EMAIL"]
          },
          "usage": {
            "type": "string",
            "description": "At which document position shall the text be used; possible values; T - Title, I - Introduction, D - Condition",
            "enum": ["CONDITION", "INTRODUCTION", "TITLE"]
          }
        },
        "description": "title, introduction and condition text"
      },
      "EffortDTO": {
        "title": "EffortDTO",
        "type": "object",
        "properties": {
          "activity": {
            "$ref": "#/components/schemas/ReportingActivityDTO"
          },
          "activityName": {
            "type": "string",
            "description": "full activity name (optional)"
          },
          "date": {
            "type": "string",
            "description": "date of effort",
            "format": "date"
          },
          "duration": {
            "type": "number",
            "description": "duration of effort",
            "format": "double"
          },
          "entityId": {
            "type": "integer",
            "description": "assigned entity id ,",
            "format": "int32"
          },
          "entityType": {
            "type": "string",
            "description": "type of assigned entity, one of: P - project, CU - cost unit, C - contact",
            "enum": ["CONTACT", "COST_UNIT", "PROJECT"]
          },
          "hourlyRate": {
            "type": "number",
            "description": "hourly rate of this effort",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "isInvoiced": {
            "type": "boolean",
            "description": "if effort has been invoiced already",
            "example": false
          },
          "notes": {
            "type": "string",
            "description": "notes to this effort"
          },
          "remoteId": {
            "type": "integer",
            "description": "id of a remote system",
            "format": "int32"
          },
          "updated": {
            "type": "string",
            "description": "update at",
            "format": "date-time"
          },
          "userId": {
            "type": "integer",
            "description": "id of user ,",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "description": "full name of user (optional)"
          }
        }
      },
      "ExchangeRateDTO": {
        "title": "ExchangeRateDTO",
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "description": "when contact was created",
            "format": "date-time"
          },
          "currencyFrom": {
            "type": "string",
            "description": "ISO currency name we are setting exchange from",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BYR",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XFU",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW"
            ]
          },
          "currencyTo": {
            "type": "string",
            "description": "ISO currency name we are setting exchange to",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BYR",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XFU",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW"
            ]
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "inactiv": {
            "type": "boolean",
            "description": "is not active anymore",
            "example": false
          },
          "rate": {
            "type": "number",
            "description": "exchange rate value",
            "format": "double"
          },
          "remoteId": {
            "type": "integer",
            "description": "id of a remote system",
            "format": "int32"
          }
        }
      },
      "FreeTextDTO": {
        "title": "FreeTextDTO",
        "type": "object",
        "properties": {
          "fontSize": {
            "type": "integer",
            "description": "font size of displayed text (min: 1; max: 50)",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "language": {
            "type": "string",
            "description": "language; possible values: de, en, es, fr, it ,",
            "enum": ["ENGLISH", "FRENCH", "GERMAN", "ITALIAN", "SPANISH"]
          },
          "pageNo": {
            "type": "integer",
            "description": "which page text is displayed on",
            "format": "int32"
          },
          "positionX": {
            "type": "number",
            "description": "The x position of the free text",
            "format": "double"
          },
          "positionY": {
            "type": "number",
            "description": "The y position of the free text",
            "format": "double"
          },
          "text": {
            "type": "string",
            "description": "displayed text"
          }
        },
        "description": "free texts objects"
      },
      "InvoiceDTO": {
        "title": "InvoiceDTO",
        "type": "object",
        "properties": {
          "bankAccount": {
            "$ref": "#/components/schemas/BankAccountDTO"
          },
          "cashDiscountDate": {
            "type": "string",
            "description": "cash discount deadline date",
            "format": "date"
          },
          "cashDiscountRate": {
            "type": "integer",
            "description": "cash discount value in %",
            "format": "int32"
          },
          "contact": {
            "$ref": "#/components/schemas/ContactDTO"
          },
          "contactAddress": {
            "$ref": "#/components/schemas/ContactAddressDTO"
          },
          "contactName": {
            "type": "string",
            "description": "name of a contact"
          },
          "contactPerson": {
            "$ref": "#/components/schemas/ContactPersonDTO"
          },
          "contactPrePageAddress": {
            "$ref": "#/components/schemas/ContactAddressDTO"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "description": "currency (e.g. CHF, EUR)",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BYR",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XFU",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW"
            ]
          },
          "date": {
            "type": "string",
            "description": "date of the document",
            "format": "date"
          },
          "discountRate": {
            "type": "number",
            "description": "optional discount rate",
            "format": "double"
          },
          "discountType": {
            "type": "string",
            "description": "optional discount type; possible values: A - amount, P - in %",
            "enum": ["AMOUNT", "IN_PERCENT"]
          },
          "due": {
            "type": "string",
            "description": "due date of the invoice",
            "format": "date"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "isr": {
            "$ref": "#/components/schemas/IsrDTO"
          },
          "isrPosition": {
            "type": "string",
            "description": "ISR position; possible values: A - additional page, F - first page, L - last page",
            "enum": ["ADDITIONAL_PAGE", "FIRST_PAGE", "LAST_PAGE"]
          },
          "isrReferenceNumber": {
            "type": "string",
            "description": "ISR reference number"
          },
          "language": {
            "type": "string",
            "description": "language; possible values: de, en, es, fr, it ,",
            "enum": ["ENGLISH", "FRENCH", "GERMAN", "ITALIAN", "SPANISH"]
          },
          "layout": {
            "$ref": "#/components/schemas/LayoutDTO"
          },
          "notes": {
            "type": "string",
            "description": "optional notes"
          },
          "number": {
            "type": "string",
            "description": "document number"
          },
          "pageAmount": {
            "type": "integer",
            "description": "how many pages the document has",
            "format": "int32"
          },
          "paidDate": {
            "type": "string",
            "description": "date when invoice was fully paid"
          },
          "paymentLinkPaypal": {
            "type": "boolean",
            "description": "whether to print PayPal link on invoice",
            "example": false
          },
          "paymentLinkPaypalUrl": {
            "type": "string",
            "description": "PayPal link URL"
          },
          "paymentLinkPayrexx": {
            "type": "boolean",
            "description": "whether to print Payrexx link on invoice",
            "example": false
          },
          "paymentLinkPayrexxUrl": {
            "type": "string",
            "description": "Payrexx link URL"
          },
          "paymentLinkPostfinance": {
            "type": "boolean",
            "description": "whether to print PostFinance link on invoice",
            "example": false
          },
          "paymentLinkPostfinanceUrl": {
            "type": "string",
            "description": "PostFinance link URL"
          },
          "paymentLinkSmartcommerce": {
            "type": "boolean",
            "description": "whether to print SmartCommerce link on invoice",
            "example": false
          },
          "paymentLinkSmartcommerceUrl": {
            "type": "string",
            "description": "SmartCommerce link URL"
          },
          "periodFrom": {
            "type": "string",
            "description": "service period from",
            "format": "date"
          },
          "periodText": {
            "type": "string",
            "description": "service/delivery"
          },
          "periodTo": {
            "type": "string",
            "description": "service period to",
            "format": "date"
          },
          "remoteId": {
            "type": "integer",
            "description": "id of a remote system",
            "format": "int32"
          },
          "signature": {
            "$ref": "#/components/schemas/SignatureDTO"
          },
          "status": {
            "type": "string",
            "description": "status of invoice, possible values: DR - draft, S - sent, P - paid,\nPP - partially paid, R1 - 1st reminder, R2 - 2nd reminder, R3 - 3rd reminder,\nR - reminder, DC - debt collection, C - cancelled, D - deleted (but still visible)",
            "enum": [
              "CANCELD",
              "DEBT_COLLECTION",
              "DELETED",
              "DRAFT",
              "FIRST_REMINDER",
              "PARTIALLY_PAID",
              "PAYED",
              "PAYMENT_REMINDER",
              "SECOND_REMINDER",
              "SENT",
              "THIRD_REMINDER"
            ]
          },
          "total": {
            "type": "number",
            "description": "total amount of the delivery note",
            "format": "double"
          },
          "totalPaid": {
            "type": "number",
            "description": "paid amount of the invoice",
            "format": "double"
          },
          "vatIncluded": {
            "type": "boolean",
            "description": "whether prices in delivery note include VAT",
            "example": false
          }
        }
      },
      "IsrDTO": {
        "title": "IsrDTO",
        "type": "object",
        "properties": {
          "bankAddress": {
            "type": "string",
            "description": "Address of the bank"
          },
          "bankName": {
            "type": "string",
            "description": "Name of the bank"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "defaultIsr": {
            "type": "boolean",
            "description": "whether ISR is a default one",
            "example": false
          },
          "deliveryNumber": {
            "type": "string",
            "description": "the number (BESR or REF)"
          },
          "iban": {
            "type": "string",
            "description": "the IBAN account number"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "inactiv": {
            "type": "boolean",
            "description": "is not active anymore",
            "example": false
          },
          "leftPrintAdjust": {
            "type": "number",
            "description": "left print adjust in mm",
            "format": "double"
          },
          "name": {
            "type": "string",
            "description": "optional ISR name (for internal system use only)"
          },
          "position": {
            "type": "string",
            "description": "ISR position; possible values: A - additional page, F - first page, L - last page",
            "enum": ["ADDITIONAL_PAGE", "FIRST_PAGE", "LAST_PAGE"]
          },
          "recipientAddition": {
            "type": "string",
            "description": "additional information of the recipient"
          },
          "recipientCity": {
            "type": "string",
            "description": "city of the recipient"
          },
          "recipientName": {
            "type": "string",
            "description": "name of the recipient"
          },
          "recipientStreet": {
            "type": "string",
            "description": "street of the recipient"
          },
          "subscriberNumber": {
            "type": "string",
            "description": "the subscriber number (Teilnehmernummer)"
          },
          "topPrintAdjust": {
            "type": "number",
            "description": "top print adjust in mm",
            "format": "double"
          },
          "type": {
            "type": "string",
            "description": "SR type; possible values: ISR - orange inpayment slip, ISR+ - orange inpayment slip plus, RIS - red inpayment slip, QR Code and QR Code with reference",
            "enum": ["IBAN_NUMBER", "ORANGE_INPAYMENT", "ORANGE_INPAYMENT_PLUS", "QR_CODE", "QR_CODE_WITH_REFERENCE", "RED_INPAYMENT"]
          }
        },
        "description": "ISR definition for ISR - orange inpayment slip, ISR+ - orange inpayment slip plus, RIS - red inpayment slip, QR Code and QR Code with reference"
      },
      "JWTToken": {
        "title": "JWTToken",
        "type": "object",
        "properties": {
          "id_token": {
            "type": "string"
          }
        }
      },
      "KeyAndPasswordVM": {
        "title": "KeyAndPasswordVM",
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        }
      },
      "LayoutDTO": {
        "title": "LayoutDTO",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "remoteId": {
            "type": "integer",
            "description": "id of a remote system",
            "format": "int32"
          }
        },
        "description": "the document Layout definition"
      },
      "LoginVM": {
        "title": "LoginVM",
        "required": ["password", "username"],
        "type": "object",
        "properties": {
          "password": {
            "maxLength": 100,
            "minLength": 4,
            "type": "string"
          },
          "rememberMe": {
            "type": "boolean"
          },
          "username": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "ManagedUserVM": {
        "title": "ManagedUserVM",
        "required": ["login"],
        "type": "object",
        "properties": {
          "activated": {
            "type": "boolean"
          },
          "authorities": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "maxLength": 254,
            "minLength": 5,
            "type": "string"
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "imageUrl": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "langKey": {
            "maxLength": 10,
            "minLength": 2,
            "type": "string"
          },
          "lastModifiedBy": {
            "type": "string"
          },
          "lastModifiedDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "login": {
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$",
            "type": "string"
          },
          "password": {
            "maxLength": 100,
            "minLength": 4,
            "type": "string"
          }
        }
      },
      "OfferDTO": {
        "title": "OfferDTO",
        "type": "object",
        "properties": {
          "acceptOnline": {
            "type": "boolean",
            "description": "whether offer can be accepted online",
            "example": false
          },
          "acceptOnlineStatus": {
            "type": "string",
            "description": "status of offer's acceptance; possible values: A - accepted, D - declined, U - unknown",
            "enum": ["ACCEPTED", "DECLINED", "UNKNOWN"]
          },
          "acceptOnlineUrl": {
            "type": "string",
            "description": "generated URL for accepting the offer online"
          },
          "contact": {
            "$ref": "#/components/schemas/ContactDTO"
          },
          "contactAddress": {
            "$ref": "#/components/schemas/ContactAddressDTO"
          },
          "contactName": {
            "type": "string",
            "description": "name of a contact"
          },
          "contactPerson": {
            "$ref": "#/components/schemas/ContactPersonDTO"
          },
          "contactPrePageAddress": {
            "$ref": "#/components/schemas/ContactAddressDTO"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "description": "currency (e.g. CHF, EUR)",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BYR",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XFU",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW"
            ]
          },
          "date": {
            "type": "string",
            "description": "date of the document",
            "format": "date"
          },
          "discountRate": {
            "type": "number",
            "description": "optional discount rate",
            "format": "double"
          },
          "discountType": {
            "type": "string",
            "description": "optional discount type; possible values: A - amount, P - in %",
            "enum": ["AMOUNT", "IN_PERCENT"]
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "language": {
            "type": "string",
            "description": "language; possible values: de, en, es, fr, it ,",
            "enum": ["ENGLISH", "FRENCH", "GERMAN", "ITALIAN", "SPANISH"]
          },
          "layout": {
            "$ref": "#/components/schemas/LayoutDTO"
          },
          "notes": {
            "type": "string",
            "description": "optional notes"
          },
          "number": {
            "type": "string",
            "description": "document number"
          },
          "pageAmount": {
            "type": "integer",
            "description": "how many pages the document has",
            "format": "int32"
          },
          "periodText": {
            "type": "string",
            "description": "service/delivery"
          },
          "remoteId": {
            "type": "integer",
            "description": "id of a remote system",
            "format": "int32"
          },
          "signature": {
            "$ref": "#/components/schemas/SignatureDTO"
          },
          "status": {
            "type": "string",
            "description": "status of offer, possible values: DR - draft, S - sent, DE - declined, A - accepted, B - billed, D - deleted (but still visible)",
            "enum": ["BILLED", "DELETED", "DRAFT", "SENT"]
          },
          "total": {
            "type": "number",
            "description": "total amount of the delivery note",
            "format": "double"
          },
          "validUntil": {
            "type": "string",
            "description": "date that offer is valid until",
            "format": "date"
          },
          "vatIncluded": {
            "type": "boolean",
            "description": "whether prices in delivery note include VAT",
            "example": false
          }
        }
      },
      "OrderConfirmationDTO": {
        "title": "OrderConfirmationDTO",
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/ContactDTO"
          },
          "contactAddress": {
            "$ref": "#/components/schemas/ContactAddressDTO"
          },
          "contactName": {
            "type": "string",
            "description": "name of a contact"
          },
          "contactPerson": {
            "$ref": "#/components/schemas/ContactPersonDTO"
          },
          "contactPrePageAddress": {
            "$ref": "#/components/schemas/ContactAddressDTO"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "description": "currency (e.g. CHF, EUR)",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BYR",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XFU",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW"
            ]
          },
          "date": {
            "type": "string",
            "description": "date of the document",
            "format": "date"
          },
          "discountRate": {
            "type": "number",
            "description": "optional discount rate",
            "format": "double"
          },
          "discountType": {
            "type": "string",
            "description": "optional discount type; possible values: A - amount, P - in %",
            "enum": ["AMOUNT", "IN_PERCENT"]
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "language": {
            "type": "string",
            "description": "language; possible values: de, en, es, fr, it ,",
            "enum": ["ENGLISH", "FRENCH", "GERMAN", "ITALIAN", "SPANISH"]
          },
          "layout": {
            "$ref": "#/components/schemas/LayoutDTO"
          },
          "notes": {
            "type": "string",
            "description": "optional notes"
          },
          "number": {
            "type": "string",
            "description": "document number"
          },
          "pageAmount": {
            "type": "integer",
            "description": "how many pages the document has",
            "format": "int32"
          },
          "periodText": {
            "type": "string",
            "description": "service/delivery"
          },
          "remoteId": {
            "type": "integer",
            "description": "id of a remote system",
            "format": "int32"
          },
          "signature": {
            "$ref": "#/components/schemas/SignatureDTO"
          },
          "status": {
            "type": "string",
            "description": "status of order confirmation, possible values: DR - draft, S - sent, B - billed, D - deleted (but still visible)",
            "enum": ["BILLED", "DELETED", "DRAFT", "SENT"]
          },
          "total": {
            "type": "number",
            "description": "total amount of the delivery note",
            "format": "double"
          },
          "vatIncluded": {
            "type": "boolean",
            "description": "whether prices in delivery note include VAT",
            "example": false
          }
        }
      },
      "OwnerDTO": {
        "title": "OwnerDTO",
        "type": "object",
        "properties": {
          "companyAddition": {
            "type": "string",
            "description": "another company name line"
          },
          "companyCity": {
            "type": "string",
            "description": "company address: city ,"
          },
          "companyCountry": {
            "type": "string",
            "description": "company address: country (ISO2)",
            "enum": [
              "AD",
              "AE",
              "AF",
              "AG",
              "AI",
              "AL",
              "AM",
              "AN",
              "AO",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AW",
              "AZ",
              "BA",
              "BB",
              "BD",
              "BE",
              "BF",
              "BG",
              "BH",
              "BI",
              "BJ",
              "BL",
              "BM",
              "BN",
              "BO",
              "BR",
              "BS",
              "BT",
              "BW",
              "BY",
              "BZ",
              "CA",
              "CC",
              "CD",
              "CF",
              "CG",
              "CH",
              "CI",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CR",
              "CU",
              "CV",
              "CX",
              "CY",
              "CZ",
              "DE",
              "DJ",
              "DK",
              "DM",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EG",
              "ER",
              "ES",
              "ET",
              "FI",
              "FJ",
              "FK",
              "FM",
              "FO",
              "FR",
              "GA",
              "GB",
              "GD",
              "GE",
              "GH",
              "GI",
              "GL",
              "GM",
              "GN",
              "GQ",
              "GR",
              "GT",
              "GU",
              "GW",
              "GY",
              "HK",
              "HN",
              "HR",
              "HT",
              "HU",
              "ID",
              "IE",
              "IL",
              "IM",
              "IN",
              "IQ",
              "IR",
              "IS",
              "IT",
              "JM",
              "JO",
              "JP",
              "KE",
              "KG",
              "KH",
              "KI",
              "KM",
              "KN",
              "KP",
              "KR",
              "KW",
              "KY",
              "KZ",
              "LA",
              "LB",
              "LC",
              "LI",
              "LK",
              "LR",
              "LS",
              "LT",
              "LU",
              "LV",
              "LY",
              "MA",
              "MC",
              "MD",
              "ME",
              "MF",
              "MG",
              "MH",
              "MK",
              "ML",
              "MM",
              "MN",
              "MO",
              "MP",
              "MR",
              "MS",
              "MT",
              "MU",
              "MV",
              "MW",
              "MX",
              "MY",
              "MZ",
              "NA",
              "NC",
              "NE",
              "NG",
              "NI",
              "NL",
              "NO",
              "NP",
              "NR",
              "NU",
              "NZ",
              "OM",
              "PA",
              "PE",
              "PF",
              "PG",
              "PH",
              "PK",
              "PL",
              "PM",
              "PN",
              "PR",
              "PT",
              "PW",
              "PY",
              "QA",
              "RO",
              "RS",
              "RU",
              "RW",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SG",
              "SH",
              "SI",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SR",
              "ST",
              "SV",
              "SY",
              "SZ",
              "TC",
              "TD",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TO",
              "TR",
              "TT",
              "TV",
              "TW",
              "TZ",
              "UA",
              "UG",
              "US",
              "UY",
              "UZ",
              "VA",
              "VC",
              "VE",
              "VG",
              "VI",
              "VN",
              "VU",
              "WF",
              "WS",
              "YE",
              "YT",
              "ZA",
              "ZM",
              "ZW"
            ]
          },
          "companyCurrency": {
            "type": "string",
            "description": "default billing currency",
            "enum": ["CHF", "EUR", "USD"]
          },
          "companyEmail": {
            "type": "string",
            "description": "email address"
          },
          "companyFax": {
            "type": "string",
            "description": "fax number"
          },
          "companyName": {
            "type": "string",
            "description": "company name"
          },
          "companyPhone": {
            "type": "string",
            "description": "phone number"
          },
          "companyPostcode": {
            "type": "string",
            "description": "company address: postcode"
          },
          "companyStreet": {
            "type": "string",
            "description": "company address: street"
          },
          "companyStreet2": {
            "type": "string",
            "description": "company address: another street line"
          },
          "companyStreetNo": {
            "type": "string",
            "description": "company address: street number"
          },
          "companyVatId": {
            "type": "string",
            "description": "VAT/EU VAT ID no."
          },
          "companyWebsite": {
            "type": "string",
            "description": "website URL"
          },
          "email": {
            "type": "string",
            "description": "user email address"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "language": {
            "type": "string",
            "description": "company communication language",
            "enum": ["ENGLISH", "FRENCH", "GERMAN"]
          },
          "name": {
            "type": "string",
            "description": "user name"
          },
          "remoteId": {
            "type": "integer",
            "description": "id of a remote system",
            "format": "int32"
          },
          "surname": {
            "type": "string",
            "description": "user surname"
          }
        }
      },
      "PasswordChangeDTO": {
        "title": "PasswordChangeDTO",
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        }
      },
      "PermissionDTO": {
        "title": "PermissionDTO",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "description": "actions that can be performed on an item (possible values: view, edit)"
      },
      "ProjectDTO": {
        "title": "ProjectDTO",
        "required": ["name", "startDate", "status"],
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/ContactDTO"
          },
          "contactName": {
            "type": "string",
            "description": "related contact's name (optional)"
          },
          "description": {
            "type": "string",
            "description": "project's description"
          },
          "hourlyRate": {
            "type": "number",
            "description": "project's hourly rate",
            "format": "double"
          },
          "hoursEstimated": {
            "type": "number",
            "description": "project's estimated maximum effort (in hours)",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "project's name"
          },
          "number": {
            "type": "string",
            "description": "project's internal number"
          },
          "remoteId": {
            "type": "integer",
            "description": "id of a remote system",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "description": "project's start date",
            "format": "date"
          },
          "status": {
            "type": "string",
            "description": "status to be set, on of:  ''O'' - open, ''C'' - closed, ''B'' - billed, ''P'' - pending'",
            "enum": ["BILLED", "CLOSED", "OPEN", "PENDING"]
          }
        }
      },
      "ReportingActivityDTO": {
        "title": "ReportingActivityDTO",
        "type": "object",
        "properties": {
          "catalogService": {
            "$ref": "#/components/schemas/CatalogServiceDTO"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "inactiv": {
            "type": "boolean",
            "description": "is not active anymore",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "name of activity eg. Consulting"
          },
          "remoteId": {
            "type": "integer",
            "description": "id of a remote system",
            "format": "int32"
          },
          "useServicePrice": {
            "type": "boolean",
            "description": "use price defined in service catalog",
            "example": false
          }
        },
        "description": "Reporting Activity like consulting with an optional relation to a catalog service"
      },
      "ResourcePermissionDTO": {
        "title": "ResourcePermissionDTO",
        "required": ["add", "domainArea", "edit", "manage"],
        "type": "object",
        "properties": {
          "add": {
            "type": "string",
            "description": "the use can add a new resource",
            "enum": ["ALL", "NONE", "OWN"]
          },
          "applicationUser": {
            "$ref": "#/components/schemas/ApplicationUserDTO"
          },
          "domainArea": {
            "type": "string",
            "description": "the permission is for the domain resource",
            "enum": [
              "CONTACTS",
              "DELIVERY_NOTES",
              "INVOICES",
              "LETTERS",
              "OFFERS",
              "ORDER_CONFIRMATIONS",
              "PRODUCTS",
              "PROJECTS",
              "REPORTING",
              "SERVICES",
              "USERS"
            ]
          },
          "edit": {
            "type": "string",
            "description": "the use can edit a resource",
            "enum": ["ALL", "NONE", "OWN"]
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "manage": {
            "type": "string",
            "description": "the use can manage a resource",
            "enum": ["ALL", "NONE", "OWN"]
          },
          "role": {
            "$ref": "#/components/schemas/ApplicationRoleDTO"
          }
        },
        "description": "actions that can be performed on an item (possible values: view, edit, manage) for own or all"
      },
      "SignatureDTO": {
        "title": "SignatureDTO",
        "type": "object",
        "properties": {
          "applicationUser": {
            "$ref": "#/components/schemas/ApplicationUserDTO"
          },
          "heigth": {
            "type": "integer",
            "description": "the height of the signature",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "remoteId": {
            "type": "integer",
            "description": "id of a remote system",
            "format": "int32"
          },
          "signatureImage": {
            "type": "string",
            "description": "the image of the signature",
            "format": "byte"
          },
          "signatureImageContentType": {
            "type": "string"
          },
          "userName": {
            "type": "string",
            "description": "the user name of this signature"
          },
          "width": {
            "type": "integer",
            "description": "the width of the signature",
            "format": "int32"
          }
        },
        "description": "User Signatures for documents"
      },
      "User": {
        "title": "User",
        "required": ["activated", "login"],
        "type": "object",
        "properties": {
          "activated": {
            "type": "boolean"
          },
          "email": {
            "maxLength": 254,
            "minLength": 5,
            "type": "string"
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "imageUrl": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "langKey": {
            "maxLength": 10,
            "minLength": 2,
            "type": "string"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "login": {
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$",
            "type": "string"
          },
          "resetDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserDTO": {
        "title": "UserDTO",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "login": {
            "type": "string"
          }
        }
      },
      "ValueAddedTaxDTO": {
        "title": "ValueAddedTaxDTO",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "inactiv": {
            "type": "boolean",
            "description": "is not active anymore",
            "example": false
          },
          "name": {
            "type": "string",
            "description": "Name of the VAT"
          },
          "newVatId": {
            "type": "integer",
            "description": "replaced by",
            "format": "int32"
          },
          "validFrom": {
            "type": "string",
            "description": "VAT is valid from",
            "format": "date"
          },
          "validUntil": {
            "type": "string",
            "description": "VAT is valid until",
            "format": "date"
          },
          "vatPercent": {
            "type": "number",
            "description": "The VAT percent",
            "format": "double"
          },
          "vatType": {
            "type": "string",
            "description": "VAT Type percent, no_vat, free_input",
            "enum": ["FREE_INPUT", "NO_VAT", "PERCENT"]
          }
        },
        "description": "Value added tax"
      },
      "WorkingHourDTO": {
        "title": "WorkingHourDTO",
        "type": "object",
        "properties": {
          "applicationUser": {
            "$ref": "#/components/schemas/ApplicationUserDTO"
          },
          "created": {
            "type": "string",
            "description": "date when working hours entity was created",
            "format": "date-time"
          },
          "date": {
            "type": "string",
            "description": "date of working hours time span",
            "format": "date"
          },
          "effort": {
            "$ref": "#/components/schemas/EffortDTO"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "remoteId": {
            "type": "integer",
            "description": "id of a remote system",
            "format": "int32"
          },
          "timeEnd": {
            "type": "string",
            "description": "end of working hours time span (in HH:MM format)",
            "format": "date-time"
          },
          "timeStart": {
            "type": "string",
            "description": "start of working hours time span (in HH:MM format)",
            "format": "date-time"
          },
          "userName": {
            "type": "string",
            "description": "(optional): full name of user"
          }
        },
        "description": "Working Hours of an ApplicationUser"
      }
    }
  }
}
